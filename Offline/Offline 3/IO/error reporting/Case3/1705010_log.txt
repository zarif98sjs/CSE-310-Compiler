Line 1: type_specifier : VOID

void

Line 1: type_specifier : INT

int

Line 1: parameter_list : type_specifier ID

int x

Line 1: type_specifier : INT

int

Line 1: parameter_list : parameter_list COMMA type_specifier ID

int x,int x

Error at line 2: Multiple declaration of x in parameter

Line 3: type_specifier : INT

int

Line 3: declaration_list : ID

x

Line 3: var_declaration : type_specifier declaration_list SEMICOLON

Error at line 3: Multiple declaration of x

int x;

Line 3: statement : var_declaration

int x;

Line 3: statements : statement

int x;

Line 4: compound_statement : LCURL statements RCURL

{
int x;
}

ScopeTable # 1.1
0 --> < x , ID > 

ScopeTable # 1
24 --> < foo , ID > 

Line 4: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

void foo(int x,int x){
int x;
}

Line 4: unit : func_definition

void foo(int x,int x){
int x;
}

Line 4: program : unit

void foo(int x,int x){
int x;
}

Line 6: type_specifier : FLOAT

float

Line 6: type_specifier : INT

int

Line 6: parameter_list : type_specifier ID

int x

Line 6: type_specifier : FLOAT

float

Line 6: parameter_list : parameter_list COMMA type_specifier ID

int x,float y

Line 6: type_specifier : VOID

void

Line 6: parameter_list : parameter_list COMMA type_specifier ID

int x,float y,void z

Line 8: variable : ID

z

Line 8: factor : CONST_INT

10

Line 8: unary_expression : factor

10

Line 8: term : unary_expression

10

Line 8: simple_expression : term

10

Line 8: rel_expression : simple_expression

10

Line 8: logic_expression : rel_expression

10

Line 8: expression : variable ASSIGNOP logic_expression

Error at line 8: Void function used in expression

z=10

Line 8: expression_statement : expression SEMICOLON

z=10;

Line 8: statement : expression_statement

z=10;

Line 8: statements : statement

z=10;

Line 9: compound_statement : LCURL statements RCURL

{
z=10;
}

ScopeTable # 1.2
0 --> < x , ID > 
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1
12 --> < f , ID > 
24 --> < foo , ID > 

Line 9: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

float f(int x,float y,void z){
z=10;
}

Line 9: unit : func_definition

float f(int x,float y,void z){
z=10;
}

Line 9: program : program unit

void foo(int x,int x){
int x;
}
float f(int x,float y,void z){
z=10;
}

Line 11: type_specifier : VOID

void

Line 13: type_specifier : VOID

void

Line 13: func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

void f1_f1();

Line 13: statement : func_declaration

void f1_f1();

Error at line 13: A function is defined inside a function

Line 13: statements : statement

void f1_f1();

Line 14: compound_statement : LCURL statements RCURL

{
void f1_f1();
}

ScopeTable # 1.3
7 --> < f1_f1 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
12 --> < f , ID > 
24 --> < foo , ID > 

Line 14: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f1(){
void f1_f1();
}

Line 14: unit : func_definition

void f1(){
void f1_f1();
}

Line 14: program : program unit

void foo(int x,int x){
int x;
}
float f(int x,float y,void z){
z=10;
}
void f1(){
void f1_f1();
}

Line 16: type_specifier : VOID

void

Line 18: type_specifier : VOID

void

Line 20: type_specifier : INT

int

Line 20: declaration_list : ID

x

Line 20: var_declaration : type_specifier declaration_list SEMICOLON

int x;

Line 20: statement : var_declaration

int x;

Line 20: statements : statement

int x;

Line 21: compound_statement : LCURL statements RCURL

{
int x;
}

ScopeTable # 1.4.1
0 --> < x , ID > 

ScopeTable # 1.4
9 --> < f2_f2 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
2 --> < f2 , ID > 
12 --> < f , ID > 
24 --> < foo , ID > 

Line 21: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f2_f2(){
int x;
}

Line 21: statement : func_definition

void f2_f2(){
int x;
}

Error at line 21: A function is defined inside a function

Line 21: statements : statement

void f2_f2(){
int x;
}

Line 22: compound_statement : LCURL statements RCURL

{
void f2_f2(){
int x;
}
}

ScopeTable # 1.4
9 --> < f2_f2 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
2 --> < f2 , ID > 
12 --> < f , ID > 
24 --> < foo , ID > 

Line 22: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f2(){
void f2_f2(){
int x;
}
}

Line 22: unit : func_definition

void f2(){
void f2_f2(){
int x;
}
}

Line 22: program : program unit

void foo(int x,int x){
int x;
}
float f(int x,float y,void z){
z=10;
}
void f1(){
void f1_f1();
}
void f2(){
void f2_f2(){
int x;
}
}

Line 25: type_specifier : INT

int

Line 27: argument_list : 

Line 27: factor : ID LPAREN argument_list RPAREN

Error at line 27: Total number of arguments mismatch in function foo

foo()

Line 27: unary_expression : factor

foo()

Line 27: term : unary_expression

foo()

Line 27: simple_expression : term

foo()

Line 27: rel_expression : simple_expression

foo()

Line 27: logic_expression : rel_expression

foo()

Line 27: expression : logic_expression

foo()

Line 27: expression_statement : expression SEMICOLON

foo();

Line 27: statement : expression_statement

foo();

Line 27: statements : statement

foo();

Line 29: type_specifier : INT

int

Line 29: declaration_list : ID

a

Line 29: var_declaration : type_specifier declaration_list SEMICOLON

int a;

Line 29: statement : var_declaration

int a;

Line 29: statements : statements statement

foo();
int a;

Line 30: type_specifier : FLOAT

float

Line 30: declaration_list : ID

b

Line 30: var_declaration : type_specifier declaration_list SEMICOLON

float b;

Line 30: statement : var_declaration

float b;

Line 30: statements : statements statement

foo();
int a;
float b;

Line 31: type_specifier : VOID

void

Line 31: declaration_list : ID

c

Line 31: var_declaration : type_specifier declaration_list SEMICOLON

Error at line 31: Variable type cannot be void

void c;

Line 31: statement : var_declaration

void c;

Line 31: statements : statements statement

foo();
int a;
float b;
void c;

Line 33: variable : ID

a

Line 33: variable : ID

b

Line 33: factor : variable

b

Line 33: unary_expression : factor

b

Line 33: term : unary_expression

b

Line 33: simple_expression : term

b

Line 33: rel_expression : simple_expression

b

Line 33: logic_expression : rel_expression

b

Line 33: arguments : logic_expression

b

Line 33: variable : ID

Error at line 33: Undeclared variable c

c

Line 33: factor : variable

c

Line 33: unary_expression : factor

c

Line 33: term : unary_expression

c

Line 33: simple_expression : term

c

Line 33: rel_expression : simple_expression

c

Line 33: logic_expression : rel_expression

c

Line 33: arguments : arguments COMMA logic_expression

b,c

Line 33: variable : ID

a

Line 33: factor : variable

a

Line 33: unary_expression : factor

a

Line 33: term : unary_expression

a

Line 33: simple_expression : term

a

Line 33: rel_expression : simple_expression

a

Line 33: logic_expression : rel_expression

a

Line 33: arguments : arguments COMMA logic_expression

b,c,a

Line 33: argument_list : arguments

b,c,a

Line 33: factor : ID LPAREN argument_list RPAREN

Error at line 33: 1th argument mismatch in function f

f(b,c,a)

Line 33: unary_expression : factor

f(b,c,a)

Line 33: term : unary_expression

f(b,c,a)

Line 33: simple_expression : term

f(b,c,a)

Line 33: rel_expression : simple_expression

f(b,c,a)

Line 33: logic_expression : rel_expression

f(b,c,a)

Line 33: expression : variable ASSIGNOP logic_expression

Error at line 33: Type mismatch 

a=f(b,c,a)

Line 33: expression_statement : expression SEMICOLON

a=f(b,c,a);

Line 33: statement : expression_statement

a=f(b,c,a);

Line 33: statements : statements statement

foo();
int a;
float b;
void c;
a=f(b,c,a);

Line 34: variable : ID

b

Line 34: variable : ID

b

Line 34: factor : variable

b

Line 34: unary_expression : factor

b

Line 34: term : unary_expression

b

Line 34: simple_expression : term

b

Line 34: rel_expression : simple_expression

b

Line 34: logic_expression : rel_expression

b

Line 34: arguments : logic_expression

b

Line 34: variable : ID

Error at line 34: Undeclared variable c

c

Line 34: factor : variable

c

Line 34: unary_expression : factor

c

Line 34: term : unary_expression

c

Line 34: simple_expression : term

c

Line 34: rel_expression : simple_expression

c

Line 34: logic_expression : rel_expression

c

Line 34: arguments : arguments COMMA logic_expression

b,c

Line 34: variable : ID

a

Line 34: factor : variable

a

Line 34: unary_expression : factor

a

Line 34: term : unary_expression

a

Line 34: simple_expression : term

a

Line 34: rel_expression : simple_expression

a

Line 34: logic_expression : rel_expression

a

Line 34: arguments : arguments COMMA logic_expression

b,c,a

Line 34: argument_list : arguments

b,c,a

Line 34: factor : ID LPAREN argument_list RPAREN

Error at line 34: 1th argument mismatch in function f

f(b,c,a)

Line 34: unary_expression : factor

f(b,c,a)

Line 34: term : unary_expression

f(b,c,a)

Line 34: simple_expression : term

f(b,c,a)

Line 34: rel_expression : simple_expression

f(b,c,a)

Line 34: logic_expression : rel_expression

f(b,c,a)

Line 34: expression : variable ASSIGNOP logic_expression

b=f(b,c,a)

Line 34: expression_statement : expression SEMICOLON

b=f(b,c,a);

Line 34: statement : expression_statement

b=f(b,c,a);

Line 34: statements : statements statement

foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);

Line 35: variable : ID

Error at line 35: Undeclared variable c

c

Line 35: factor : variable

c

Line 35: unary_expression : factor

c

Line 35: term : unary_expression

c

Line 35: simple_expression : term

c

Line 35: rel_expression : simple_expression

c

Line 35: logic_expression : rel_expression

c

Line 35: arguments : logic_expression

c

Line 35: argument_list : arguments

c

Line 35: factor : ID LPAREN argument_list RPAREN

Error at line 35: Total number of arguments mismatch in function f

f(c)

Line 35: unary_expression : factor

f(c)

Line 35: term : unary_expression

f(c)

Line 35: simple_expression : term

f(c)

Line 35: rel_expression : simple_expression

f(c)

Line 35: logic_expression : rel_expression

f(c)

Line 35: expression : logic_expression

f(c)

Line 35: expression_statement : expression SEMICOLON

f(c);

Line 35: statement : expression_statement

f(c);

Line 35: statements : statements statement

foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);
f(c);

Line 37: compound_statement : LCURL statements RCURL

{
foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);
f(c);
}

ScopeTable # 1.5
7 --> < a , ID > 
8 --> < b , ID > 

ScopeTable # 1
1 --> < f1 , ID > < main , ID > 
2 --> < f2 , ID > 
12 --> < f , ID > 
24 --> < foo , ID > 

Line 37: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);
f(c);
}

Line 37: unit : func_definition

int main(){
foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);
f(c);
}

Line 37: program : program unit

void foo(int x,int x){
int x;
}
float f(int x,float y,void z){
z=10;
}
void f1(){
void f1_f1();
}
void f2(){
void f2_f2(){
int x;
}
}
int main(){
foo();
int a;
float b;
void c;
a=f(b,c,a);
b=f(b,c,a);
f(c);
}

Line 37: start : program

ScopeTable # 1
1 --> < f1 , ID > < main , ID > 
2 --> < f2 , ID > 
12 --> < f , ID > 
24 --> < foo , ID > 

Total lines: 37
Total errors: 14
