Line 1: type_specifier : VOID

void

Line 1: func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

void foo();

Line 1: unit : func_declaration

void foo();

Line 1: program : unit

void foo();

Line 3: type_specifier : VOID

void

Line 6: compound_statement : LCURL RCURL

{}

ScopeTable # 1.1

ScopeTable # 1
12 --> < f , ID > 
24 --> < foo , ID > 

Line 6: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f(){}

Line 6: unit : func_definition

void f(){}

Line 6: program : program unit

void foo();
void f(){}

Line 8: type_specifier : VOID

void

Line 11: compound_statement : LCURL RCURL

{}

ScopeTable # 1.2

ScopeTable # 1
12 --> < f , ID > 
24 --> < foo , ID > < ff , ID > 

Line 11: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void ff(){}

Line 11: unit : func_definition

void ff(){}

Line 11: program : program unit

void foo();
void f(){}
void ff(){}

Line 13: type_specifier : INT

int

Line 15: type_specifier : INT

int

Line 15: declaration_list : ID

a

Line 15: declaration_list : declaration_list COMMA ID

a,b

Line 15: declaration_list : declaration_list COMMA ID

a,b,c

Line 15: var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c;

Line 15: statement : var_declaration

int a,b,c;

Line 15: statements : statement

int a,b,c;

Line 16: type_specifier : FLOAT

float

Line 16: declaration_list : ID

d

Line 16: declaration_list : declaration_list COMMA ID

d,e

Line 16: declaration_list : declaration_list COMMA ID

d,e,f

Line 16: var_declaration : type_specifier declaration_list SEMICOLON

float d,e,f;

Line 16: statement : var_declaration

float d,e,f;

Line 16: statements : statements statement

int a,b,c;
float d,e,f;

Line 18: type_specifier : INT

int

Line 18: declaration_list : ID LTHIRD CONST_INT RTHIRD

ara[10]

Line 18: var_declaration : type_specifier declaration_list SEMICOLON

int ara[10];

Line 18: statement : var_declaration

int ara[10];

Line 18: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];

Line 19: type_specifier : FLOAT

float

Line 19: declaration_list : ID LTHIRD CONST_INT RTHIRD

ara[10]

Line 19: var_declaration : type_specifier declaration_list SEMICOLON

Error at line 19: Multiple declaration of ara

float ara[10];

Line 19: statement : var_declaration

float ara[10];

Line 19: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];

Line 21: variable : ID

a

Line 21: variable : ID

b

Line 21: factor : variable

b

Line 21: unary_expression : factor

b

Line 21: term : unary_expression

b

Line 21: simple_expression : term

b

Line 21: rel_expression : simple_expression

b

Line 21: argument_list : 

Line 21: factor : ID LPAREN argument_list RPAREN

Error at line 21: Function not implemented

foo()

Line 21: unary_expression : factor

foo()

Line 21: term : unary_expression

foo()

Line 21: simple_expression : term

foo()

Line 21: rel_expression : simple_expression

foo()

Line 21: logic_expression : rel_expression LOGICOP rel_expression

Error at line 21: Void function used in expression

b||foo()

Line 21: expression : variable ASSIGNOP logic_expression

a=b||foo()

Line 21: expression_statement : expression SEMICOLON

a=b||foo();

Line 21: statement : expression_statement

a=b||foo();

Line 21: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();

Line 22: variable : ID

a

Line 22: variable : ID

b

Line 22: factor : variable

b

Line 22: unary_expression : factor

b

Line 22: term : unary_expression

b

Line 22: simple_expression : term

b

Line 22: rel_expression : simple_expression

b

Line 22: argument_list : 

Line 22: factor : ID LPAREN argument_list RPAREN

Error at line 22: f not a function

Line 22: unary_expression : factor

f()

Line 22: term : unary_expression

f()

Line 22: simple_expression : term

f()

Line 22: rel_expression : simple_expression

f()

Line 22: logic_expression : rel_expression LOGICOP rel_expression

b||f()

Line 22: expression : variable ASSIGNOP logic_expression

a=b||f()

Line 22: expression_statement : expression SEMICOLON

a=b||f();

Line 22: statement : expression_statement

a=b||f();

Line 22: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();

Line 23: variable : ID

a

Line 23: variable : ID

b

Line 23: factor : variable

b

Line 23: unary_expression : factor

b

Line 23: term : unary_expression

b

Line 23: simple_expression : term

b

Line 23: rel_expression : simple_expression

b

Line 23: argument_list : 

Line 23: factor : ID LPAREN argument_list RPAREN

ff()

Line 23: unary_expression : factor

ff()

Line 23: term : unary_expression

ff()

Line 23: simple_expression : term

ff()

Line 23: rel_expression : simple_expression

ff()

Line 23: logic_expression : rel_expression LOGICOP rel_expression

Error at line 23: Void function used in expression

b||ff()

Line 23: expression : variable ASSIGNOP logic_expression

a=b||ff()

Line 23: expression_statement : expression SEMICOLON

a=b||ff();

Line 23: statement : expression_statement

a=b||ff();

Line 23: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();

Line 25: variable : ID

d

Line 25: factor : variable

d

Line 25: unary_expression : factor

d

Line 25: term : unary_expression

d

Line 25: simple_expression : term

d

Line 25: argument_list : 

Line 25: factor : ID LPAREN argument_list RPAREN

ff()

Line 25: unary_expression : factor

ff()

Line 25: term : unary_expression

ff()

Line 25: simple_expression : term

ff()

Line 25: rel_expression : simple_expression RELOP simple_expression

Error at line 25: Void function used in expression

d==ff()

Line 25: logic_expression : rel_expression

d==ff()

Line 25: expression : logic_expression

d==ff()

Line 25: expression_statement : expression SEMICOLON

d==ff();

Line 25: statement : expression_statement

d==ff();

Line 25: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();

Line 26: variable : ID

d

Line 26: factor : variable

d

Line 26: unary_expression : factor

d

Line 26: term : unary_expression

d

Line 26: simple_expression : term

d

Line 26: variable : ID

b

Line 26: factor : variable

b

Line 26: unary_expression : factor

b

Line 26: term : unary_expression

b

Line 26: simple_expression : term

b

Line 26: rel_expression : simple_expression RELOP simple_expression

d==b

Line 26: logic_expression : rel_expression

d==b

Line 26: expression : logic_expression

d==b

Line 26: expression_statement : expression SEMICOLON

d==b;

Line 26: statement : expression_statement

d==b;

Line 26: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;

Line 27: variable : ID

d

Line 27: factor : variable

d

Line 27: unary_expression : factor

d

Line 27: term : unary_expression

d

Line 27: simple_expression : term

d

Line 27: variable : ID

f

Line 27: factor : variable

f

Line 27: unary_expression : factor

f

Line 27: term : unary_expression

f

Line 27: simple_expression : term

f

Line 27: rel_expression : simple_expression RELOP simple_expression

d==f

Line 27: logic_expression : rel_expression

d==f

Line 27: expression : logic_expression

d==f

Line 27: expression_statement : expression SEMICOLON

d==f;

Line 27: statement : expression_statement

d==f;

Line 27: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;

Line 29: variable : ID

d

Line 29: variable : ID

Error at line 29: Type mismatch ara is an array

ara

Line 29: factor : variable

ara

Line 29: unary_expression : factor

ara

Line 29: term : unary_expression

ara

Line 29: simple_expression : term

ara

Line 29: rel_expression : simple_expression

ara

Line 29: logic_expression : rel_expression

ara

Line 29: expression : variable ASSIGNOP logic_expression

d=ara

Line 29: expression_statement : expression SEMICOLON

d=ara;

Line 29: statement : expression_statement

d=ara;

Line 29: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;

Line 30: variable : ID

Error at line 30: Type mismatch ara is an array

ara

Line 30: variable : ID

d

Line 30: factor : variable

d

Line 30: unary_expression : factor

d

Line 30: term : unary_expression

d

Line 30: simple_expression : term

d

Line 30: rel_expression : simple_expression

d

Line 30: logic_expression : rel_expression

d

Line 30: expression : variable ASSIGNOP logic_expression

ara=d

Line 30: expression_statement : expression SEMICOLON

ara=d;

Line 30: statement : expression_statement

ara=d;

Line 30: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;

Line 32: variable : ID

d

Line 32: factor : CONST_INT

1

Line 32: unary_expression : factor

1

Line 32: term : unary_expression

1

Line 32: simple_expression : term

1

Line 32: rel_expression : simple_expression

1

Line 32: logic_expression : rel_expression

1

Line 32: expression : logic_expression

1

Line 32: variable : ID LTHIRD expression RTHIRD

ara[1]

Line 32: factor : variable

ara[1]

Line 32: unary_expression : factor

ara[1]

Line 32: term : unary_expression

ara[1]

Line 32: simple_expression : term

ara[1]

Line 32: rel_expression : simple_expression

ara[1]

Line 32: logic_expression : rel_expression

ara[1]

Line 32: expression : variable ASSIGNOP logic_expression

d=ara[1]

Line 32: expression_statement : expression SEMICOLON

d=ara[1];

Line 32: statement : expression_statement

d=ara[1];

Line 32: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];

Line 33: factor : CONST_INT

1

Line 33: unary_expression : factor

1

Line 33: term : unary_expression

1

Line 33: simple_expression : term

1

Line 33: rel_expression : simple_expression

1

Line 33: logic_expression : rel_expression

1

Line 33: expression : logic_expression

1

Line 33: variable : ID LTHIRD expression RTHIRD

ara[1]

Line 33: variable : ID

d

Line 33: factor : variable

d

Line 33: unary_expression : factor

d

Line 33: term : unary_expression

d

Line 33: simple_expression : term

d

Line 33: rel_expression : simple_expression

d

Line 33: logic_expression : rel_expression

d

Line 33: expression : variable ASSIGNOP logic_expression

Error at line 33: Type mismatch 

ara[1]=d

Line 33: expression_statement : expression SEMICOLON

ara[1]=d;

Line 33: statement : expression_statement

ara[1]=d;

Line 33: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;

Line 34: factor : CONST_INT

1

Line 34: unary_expression : factor

1

Line 34: term : unary_expression

1

Line 34: simple_expression : term

1

Line 34: rel_expression : simple_expression

1

Line 34: logic_expression : rel_expression

1

Line 34: expression : logic_expression

1

Line 34: variable : ID LTHIRD expression RTHIRD

ara[1]

Line 34: variable : ID

a

Line 34: factor : variable

a

Line 34: unary_expression : factor

a

Line 34: term : unary_expression

a

Line 34: simple_expression : term

a

Line 34: rel_expression : simple_expression

a

Line 34: logic_expression : rel_expression

a

Line 34: expression : variable ASSIGNOP logic_expression

ara[1]=a

Line 34: expression_statement : expression SEMICOLON

ara[1]=a;

Line 34: statement : expression_statement

ara[1]=a;

Line 34: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;

Line 36: variable : ID

d

Line 36: factor : CONST_INT

15

Line 36: unary_expression : factor

15

Line 36: term : unary_expression

15

Line 36: simple_expression : term

15

Line 36: rel_expression : simple_expression

15

Line 36: logic_expression : rel_expression

15

Line 36: arguments : logic_expression

15

Line 36: argument_list : arguments

15

Line 36: factor : ID LPAREN argument_list RPAREN

Error at line 36: a not a function

Line 36: unary_expression : factor

a(15)

Line 36: term : unary_expression

a(15)

Line 36: simple_expression : term

a(15)

Line 36: rel_expression : simple_expression

a(15)

Line 36: logic_expression : rel_expression

a(15)

Line 36: expression : variable ASSIGNOP logic_expression

d=a(15)

Line 36: expression_statement : expression SEMICOLON

d=a(15);

Line 36: statement : expression_statement

d=a(15);

Line 36: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);

Line 37: factor : CONST_INT

15

Line 37: unary_expression : factor

15

Line 37: term : unary_expression

15

Line 37: simple_expression : term

15

Line 37: rel_expression : simple_expression

15

Line 37: logic_expression : rel_expression

15

Line 37: arguments : logic_expression

15

Line 37: argument_list : arguments

15

Line 37: factor : ID LPAREN argument_list RPAREN

Error at line 37: a not a function

Line 37: unary_expression : factor

a(15)

Line 37: term : unary_expression

a(15)

Line 37: simple_expression : term

a(15)

Line 37: rel_expression : simple_expression

a(15)

Line 37: logic_expression : rel_expression

a(15)

Line 37: expression : logic_expression

a(15)

Error at line 37: syntax error, unexpected ASSIGNOP, expecting SEMICOLON

Line 37: variable : ID

d

Line 37: factor : variable

d

Line 37: unary_expression : factor

d

Line 37: term : unary_expression

d

Line 37: simple_expression : term

d

Line 37: rel_expression : simple_expression

d

Line 37: logic_expression : rel_expression

d

Line 37: expression : logic_expression

d

Line 37: expression_statement : expression SEMICOLON

d;

Line 37: statement : expression_statement

d;

Line 37: statements : statements statement

int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);
d;

Line 39: compound_statement : LCURL statements RCURL

{
int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);
d;
}

ScopeTable # 1.3
7 --> < a , ID > 
8 --> < b , ID > < ara , ID > 
9 --> < c , ID > 
10 --> < d , ID > 
11 --> < e , ID > 
12 --> < f , ID > 

ScopeTable # 1
1 --> < main , ID > 
12 --> < f , ID > 
24 --> < foo , ID > < ff , ID > 

Line 39: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);
d;
}

Line 39: unit : func_definition

int main(){
int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);
d;
}

Line 39: program : program unit

void foo();
void f(){}
void ff(){}
int main(){
int a,b,c;
float d,e,f;
int ara[10];
float ara[10];
a=b||foo();
a=b||f();
a=b||ff();
d==ff();
d==b;
d==f;
d=ara;
ara=d;
d=ara[1];
ara[1]=d;
ara[1]=a;
d=a(15);
d;
}

Line 39: start : program

ScopeTable # 1
1 --> < main , ID > 
12 --> < f , ID > 
24 --> < foo , ID > < ff , ID > 

Total lines: 39
Total errors: 12
