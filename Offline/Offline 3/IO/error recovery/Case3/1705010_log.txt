Line 1: type_specifier : VOID

void

Error at line 1: syntax error, unexpected DECOP, expecting RPAREN or INT or FLOAT or VOID

Line 1: func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

void fooooo();

Line 1: unit : func_declaration

void fooooo();

Line 1: program : unit

void fooooo();

Line 3: type_specifier : VOID

void

Line 5: type_specifier : INT

int

Line 5: declaration_list : ID

x

Error at line 5: syntax error, unexpected ADDOP, expecting COMMA or SEMICOLON

Line 5: var_declaration : type_specifier declaration_list SEMICOLON

int x;

Line 5: statement : var_declaration

int x;

Line 5: statements : statement

int x;

Line 6: type_specifier : INT

int

Line 6: declaration_list : ID

x

Error at line 6: syntax error, unexpected ADDOP, expecting COMMA or SEMICOLON

Line 7: var_declaration : type_specifier declaration_list SEMICOLON

Error at line 7: Multiple declaration of x

int x;

Line 7: statement : var_declaration

int x;

Line 7: statements : statements statement

int x;
int x;

Line 8: type_specifier : INT

int

Line 8: declaration_list : ID

ret

Line 8: var_declaration : type_specifier declaration_list SEMICOLON

int ret;

Line 8: statement : var_declaration

int ret;

Line 8: statements : statements statement

int x;
int x;
int ret;

Line 9: compound_statement : LCURL statements RCURL

{
int x;
int x;
int ret;
}

ScopeTable # 1.1
0 --> < x , ID > 
1 --> < ret , ID > 

ScopeTable # 1
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 9: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void foo(){
int x;
int x;
int ret;
}

Line 9: unit : func_definition

void foo(){
int x;
int x;
int ret;
}

Line 9: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}

Line 11: type_specifier : VOID

void

Error at line 14: syntax error, unexpected RCURL

Line 14: compound_statement : LCURL error RCURL

{}

Line 14: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f1(){}

Line 14: unit : func_definition

void f1(){}

Line 14: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}

Line 16: type_specifier : VOID

void

Error at line 18: syntax error, unexpected DECOP

Line 19: type_specifier : INT

int

Line 19: declaration_list : ID

y

Line 19: var_declaration : type_specifier declaration_list SEMICOLON

int y;

Line 19: statement : var_declaration

int y;

Line 19: statements : statement

int y;

Line 20: type_specifier : INT

int

Line 20: declaration_list : ID

z

Line 20: var_declaration : type_specifier declaration_list SEMICOLON

int z;

Line 20: statement : var_declaration

int z;

Line 20: statements : statements statement

int y;
int z;

Line 21: compound_statement : LCURL statements RCURL

{
int y;
int z;
}

ScopeTable # 1.2.1
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1.2
1 --> < f1 , ID > 
2 --> < f2 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 21: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f2(){
int y;
int z;
}

Line 21: unit : func_definition

void f2(){
int y;
int z;
}

Line 21: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}
void f2(){
int y;
int z;
}

Line 23: type_specifier : VOID

void

Line 25: type_specifier : INT

int

Line 25: declaration_list : ID

y

Line 25: var_declaration : type_specifier declaration_list SEMICOLON

int y;

Line 25: statement : var_declaration

int y;

Line 25: statements : statement

int y;

Line 26: type_specifier : INT

int

Line 26: declaration_list : ID

z

Line 26: var_declaration : type_specifier declaration_list SEMICOLON

int z;

Line 26: statement : var_declaration

int z;

Line 26: statements : statements statement

int y;
int z;

Error at line 27: syntax error, unexpected DECOP

Line 28: compound_statement : LCURL statements RCURL

{
int y;
int z;
}

ScopeTable # 1.2.2
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1.2
1 --> < f1 , ID > 
2 --> < f2 , ID > 
3 --> < f3 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 28: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f3(){
int y;
int z;
}

Line 28: unit : func_definition

void f3(){
int y;
int z;
}

Line 28: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}
void f2(){
int y;
int z;
}
void f3(){
int y;
int z;
}

Line 30: type_specifier : VOID

void

Line 32: type_specifier : INT

int

Line 32: declaration_list : ID

x

Error at line 32: syntax error, unexpected ADDOP, expecting COMMA or SEMICOLON

Line 33: var_declaration : type_specifier declaration_list SEMICOLON

int x;

Line 33: statement : var_declaration

int x;

Line 33: statements : statement

int x;

Line 34: compound_statement : LCURL statements RCURL

{
int x;
}

ScopeTable # 1.2.3
0 --> < x , ID > 

ScopeTable # 1.2
1 --> < f1 , ID > 
2 --> < f2 , ID > 
3 --> < f3 , ID > 
4 --> < f4 , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 34: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void f4(){
int x;
}

Line 34: unit : func_definition

void f4(){
int x;
}

Line 34: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}
void f2(){
int y;
int z;
}
void f3(){
int y;
int z;
}
void f4(){
int x;
}

Line 36: type_specifier : VOID

void

Line 38: statement : RETURN SEMICOLON

return;

Line 38: statements : statement

return;

Line 39: compound_statement : LCURL statements RCURL

{
return;
}

ScopeTable # 1.2.4

ScopeTable # 1.2
1 --> < f1 , ID > 
2 --> < f2 , ID > 
3 --> < f3 , ID > 
4 --> < f4 , ID > 
9 --> < fooooooo , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 39: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void fooooooo(){
return;
}

Line 39: unit : func_definition

void fooooooo(){
return;
}

Line 39: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}
void f2(){
int y;
int z;
}
void f3(){
int y;
int z;
}
void f4(){
int x;
}
void fooooooo(){
return;
}

Line 41: type_specifier : INT

int

Line 43: type_specifier : INT

int

Line 43: declaration_list : ID

x

Error at line 43: syntax error, unexpected ADDOP, expecting COMMA or SEMICOLON

Line 43: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

x,z[10]

Line 43: var_declaration : type_specifier declaration_list SEMICOLON

int x,z[10];

Line 43: statement : var_declaration

int x,z[10];

Line 43: statements : statement

int x,z[10];

Line 44: type_specifier : INT

int

Line 44: declaration_list : ID

x1

Error at line 44: syntax error, unexpected ADDOP, expecting COMMA or SEMICOLON

Line 44: declaration_list : declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD

Error at line 44: Non-integer Array Size

x1,z1[10.5]

Line 44: var_declaration : type_specifier declaration_list SEMICOLON

int x1,z1[10.5];

Line 44: statement : var_declaration

int x1,z1[10.5];

Line 44: statements : statements statement

int x,z[10];
int x1,z1[10.5];

Line 45: compound_statement : LCURL statements RCURL

{
int x,z[10];
int x1,z1[10.5];
}

ScopeTable # 1.2.5
0 --> < x , ID > 
2 --> < z , ID > 
19 --> < x1 , ID > 
21 --> < z1 , ID > 

ScopeTable # 1.2
1 --> < f1 , ID > < main , ID > 
2 --> < f2 , ID > 
3 --> < f3 , ID > 
4 --> < f4 , ID > 
9 --> < fooooooo , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Line 45: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int x,z[10];
int x1,z1[10.5];
}

Line 45: unit : func_definition

int main(){
int x,z[10];
int x1,z1[10.5];
}

Line 45: program : program unit

void fooooo();
void foo(){
int x;
int x;
int ret;
}
void f1(){}
void f2(){
int y;
int z;
}
void f3(){
int y;
int z;
}
void f4(){
int x;
}
void fooooooo(){
return;
}
int main(){
int x,z[10];
int x1,z1[10.5];
}

Line 45: start : program

ScopeTable # 1.2
1 --> < f1 , ID > < main , ID > 
2 --> < f2 , ID > 
3 --> < f3 , ID > 
4 --> < f4 , ID > 
9 --> < fooooooo , ID > 

ScopeTable # 1
1 --> < f1 , ID > 
24 --> < foo , ID > 
27 --> < fooooo , ID > 

Total lines: 45
Total errors: 11
