Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: %empty

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 $@2: %empty

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   13 $@3: %empty

   14 func_definition: type_specifier ID LPAREN error RPAREN $@3 compound_statement

   15 parameter_list: parameter_list COMMA type_specifier ID
   16               | parameter_list error COMMA type_specifier ID
   17               | parameter_list COMMA type_specifier
   18               | type_specifier ID
   19               | error COMMA type_specifier ID
   20               | type_specifier

   21 compound_statement: LCURL dummy_scope_function statements RCURL
   22                   | LCURL dummy_scope_function RCURL

   23 dummy_scope_function: %empty

   24 var_declaration: type_specifier declaration_list SEMICOLON

   25 type_specifier: INT
   26               | FLOAT
   27               | VOID

   28 declaration_list: declaration_list COMMA ID
   29                 | declaration_list error COMMA ID
   30                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   31                 | declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD
   32                 | ID
   33                 | ID LTHIRD CONST_INT RTHIRD
   34                 | ID LTHIRD CONST_FLOAT RTHIRD

   35 statements: statement
   36           | statements statement

   37 statement: var_declaration
   38          | expression_statement
   39          | compound_statement
   40          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   41          | IF LPAREN expression RPAREN statement
   42          | IF LPAREN expression RPAREN statement ELSE statement
   43          | WHILE LPAREN expression RPAREN statement
   44          | PRINTLN LPAREN ID RPAREN SEMICOLON
   45          | RETURN expression SEMICOLON
   46          | RETURN SEMICOLON

   47 expression_statement: SEMICOLON
   48                     | expression SEMICOLON

   49 variable: ID
   50         | ID LTHIRD expression RTHIRD

   51 expression: logic_expression
   52           | variable ASSIGNOP logic_expression

   53 logic_expression: rel_expression
   54                 | rel_expression LOGICOP rel_expression

   55 rel_expression: simple_expression
   56               | simple_expression RELOP simple_expression

   57 simple_expression: term
   58                  | simple_expression ADDOP term

   59 term: unary_expression
   60     | term MULOP unary_expression

   61 unary_expression: ADDOP unary_expression
   62                 | NOT unary_expression
   63                 | factor

   64 factor: variable
   65       | ID LPAREN argument_list RPAREN
   66       | LPAREN expression RPAREN
   67       | CONST_INT
   68       | CONST_FLOAT
   69       | variable INCOP
   70       | variable DECOP

   71 argument_list: arguments
   72              | %empty

   73 arguments: arguments COMMA logic_expression
   74          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 14 16 19 29
IF (258) 41 42
ELSE (259) 42
LOWER_THAN_ELSE (260)
FOR (261) 40
WHILE (262) 43
DO (263)
BREAK (264)
CHAR (265)
DOUBLE (266)
RETURN (267) 45 46
SWITCH (268)
CASE (269)
DEFAULT (270)
CONTINUE (271)
PRINTLN (272) 44
INCOP (273) 69
DECOP (274) 70
ASSIGNOP (275) 52
NOT (276) 62
LPAREN (277) 7 8 10 12 14 40 41 42 43 44 65 66
RPAREN (278) 7 8 10 12 14 40 41 42 43 44 65 66
LCURL (279) 21 22
RCURL (280) 21 22
LTHIRD (281) 30 31 33 34 50
RTHIRD (282) 30 31 33 34 50
COMMA (283) 15 16 17 19 28 29 30 31 73
SEMICOLON (284) 7 8 24 44 45 46 47 48
ID (285) 7 8 10 12 14 15 16 18 19 28 29 30 31 32 33 34 44 49 50 65
INT (286) 25
FLOAT (287) 26
VOID (288) 27
ADDOP (289) 58 61
MULOP (290) 60
RELOP (291) 56
LOGICOP (292) 54
CONST_INT (293) 30 33 67
CONST_FLOAT (294) 31 34 68


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5 6, on right: 2 3
func_declaration (44)
    on left: 7 8, on right: 5
func_definition (45)
    on left: 10 12 14, on right: 6
$@1 (46)
    on left: 9, on right: 10
$@2 (47)
    on left: 11, on right: 12
$@3 (48)
    on left: 13, on right: 14
parameter_list (49)
    on left: 15 16 17 18 19 20, on right: 7 10 15 16 17
compound_statement (50)
    on left: 21 22, on right: 10 12 14 39
dummy_scope_function (51)
    on left: 23, on right: 21 22
var_declaration (52)
    on left: 24, on right: 4 37
type_specifier (53)
    on left: 25 26 27, on right: 7 8 10 12 14 15 16 17 18 19 20 24
declaration_list (54)
    on left: 28 29 30 31 32 33 34, on right: 24 28 29 30 31
statements (55)
    on left: 35 36, on right: 21 36
statement (56)
    on left: 37 38 39 40 41 42 43 44 45 46, on right: 35 36 40 41 42
    43
expression_statement (57)
    on left: 47 48, on right: 38 40
variable (58)
    on left: 49 50, on right: 52 64 69 70
expression (59)
    on left: 51 52, on right: 40 41 42 43 45 48 50 66
logic_expression (60)
    on left: 53 54, on right: 51 52 73 74
rel_expression (61)
    on left: 55 56, on right: 53 54
simple_expression (62)
    on left: 57 58, on right: 55 56 58
term (63)
    on left: 59 60, on right: 57 58 60
unary_expression (64)
    on left: 61 62 63, on right: 59 60 61 62
factor (65)
    on left: 64 65 66 67 68 69 70, on right: 63
argument_list (66)
    on left: 71 72, on right: 65
arguments (67)
    on left: 73 74, on right: 71 73


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   25 type_specifier: INT .

    $default  reduce using rule 25 (type_specifier)


State 2

   26 type_specifier: FLOAT .

    $default  reduce using rule 26 (type_specifier)


State 3

   27 type_specifier: VOID .

    $default  reduce using rule 27 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier . ID LPAREN RPAREN $@2 compound_statement
   14                | type_specifier . ID LPAREN error RPAREN $@3 compound_statement
   24 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID . LPAREN RPAREN $@2 compound_statement
   14                | type_specifier ID . LPAREN error RPAREN $@3 compound_statement
   32 declaration_list: ID .
   33                 | ID . LTHIRD CONST_INT RTHIRD
   34                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 32 (declaration_list)


State 14

   24 var_declaration: type_specifier declaration_list . SEMICOLON
   28 declaration_list: declaration_list . COMMA ID
   29                 | declaration_list . error COMMA ID
   30                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD
   31                 | declaration_list . COMMA ID LTHIRD CONST_FLOAT RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID LPAREN . RPAREN $@2 compound_statement
   14                | type_specifier ID LPAREN . error RPAREN $@3 compound_statement

    error   shift, and go to state 20
    RPAREN  shift, and go to state 21
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3

    parameter_list  go to state 22
    type_specifier  go to state 23


State 16

   33 declaration_list: ID LTHIRD . CONST_INT RTHIRD
   34                 | ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25


State 17

   29 declaration_list: declaration_list error . COMMA ID

    COMMA  shift, and go to state 26


State 18

   28 declaration_list: declaration_list COMMA . ID
   30                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD
   31                 | declaration_list COMMA . ID LTHIRD CONST_FLOAT RTHIRD

    ID  shift, and go to state 27


State 19

   24 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 24 (var_declaration)


State 20

   14 func_definition: type_specifier ID LPAREN error . RPAREN $@3 compound_statement
   19 parameter_list: error . COMMA type_specifier ID

    RPAREN  shift, and go to state 28
    COMMA   shift, and go to state 29


State 21

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 11 ($@2)

    $@2  go to state 31


State 22

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   15 parameter_list: parameter_list . COMMA type_specifier ID
   16               | parameter_list . error COMMA type_specifier ID
   17               | parameter_list . COMMA type_specifier

    error   shift, and go to state 32
    RPAREN  shift, and go to state 33
    COMMA   shift, and go to state 34


State 23

   18 parameter_list: type_specifier . ID
   20               | type_specifier .

    ID  shift, and go to state 35

    $default  reduce using rule 20 (parameter_list)


State 24

   33 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 25

   34 declaration_list: ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 37


State 26

   29 declaration_list: declaration_list error COMMA . ID

    ID  shift, and go to state 38


State 27

   28 declaration_list: declaration_list COMMA ID .
   30                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD
   31                 | declaration_list COMMA ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 39

    $default  reduce using rule 28 (declaration_list)


State 28

   14 func_definition: type_specifier ID LPAREN error RPAREN . $@3 compound_statement

    $default  reduce using rule 13 ($@3)

    $@3  go to state 40


State 29

   19 parameter_list: error COMMA . type_specifier ID

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 41


State 30

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 31

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 43


State 32

   16 parameter_list: parameter_list error . COMMA type_specifier ID

    COMMA  shift, and go to state 44


State 33

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 45

    $default  reduce using rule 9 ($@1)

    $@1  go to state 46


State 34

   15 parameter_list: parameter_list COMMA . type_specifier ID
   17               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 47


State 35

   18 parameter_list: type_specifier ID .

    $default  reduce using rule 18 (parameter_list)


State 36

   33 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 33 (declaration_list)


State 37

   34 declaration_list: ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 34 (declaration_list)


State 38

   29 declaration_list: declaration_list error COMMA ID .

    $default  reduce using rule 29 (declaration_list)


State 39

   30 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD
   31                 | declaration_list COMMA ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49


State 40

   14 func_definition: type_specifier ID LPAREN error RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 50


State 41

   19 parameter_list: error COMMA type_specifier . ID

    ID  shift, and go to state 51


State 42

   21 compound_statement: LCURL . dummy_scope_function statements RCURL
   22                   | LCURL . dummy_scope_function RCURL

    $default  reduce using rule 23 (dummy_scope_function)

    dummy_scope_function  go to state 52


State 43

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 44

   16 parameter_list: parameter_list error COMMA . type_specifier ID

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 53


State 45

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 46

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 54


State 47

   15 parameter_list: parameter_list COMMA type_specifier . ID
   17               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 55

    $default  reduce using rule 17 (parameter_list)


State 48

   30 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 56


State 49

   31 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 57


State 50

   14 func_definition: type_specifier ID LPAREN error RPAREN $@3 compound_statement .

    $default  reduce using rule 14 (func_definition)


State 51

   19 parameter_list: error COMMA type_specifier ID .

    $default  reduce using rule 19 (parameter_list)


State 52

   21 compound_statement: LCURL dummy_scope_function . statements RCURL
   22                   | LCURL dummy_scope_function . RCURL

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 65
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statements            go to state 74
    statement             go to state 75
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 53

   16 parameter_list: parameter_list error COMMA type_specifier . ID

    ID  shift, and go to state 85


State 54

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 10 (func_definition)


State 55

   15 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 56

   30 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 30 (declaration_list)


State 57

   31 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 31 (declaration_list)


State 58

   41 statement: IF . LPAREN expression RPAREN statement
   42          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 86


State 59

   40 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 87


State 60

   43 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 88


State 61

   45 statement: RETURN . expression SEMICOLON
   46          | RETURN . SEMICOLON

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    SEMICOLON    shift, and go to state 89
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 90
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 62

   44 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 91


State 63

   62 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable          go to state 92
    unary_expression  go to state 93
    factor            go to state 84


State 64

   66 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 94
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 65

   22 compound_statement: LCURL dummy_scope_function RCURL .

    $default  reduce using rule 22 (compound_statement)


State 66

   47 expression_statement: SEMICOLON .

    $default  reduce using rule 47 (expression_statement)


State 67

   49 variable: ID .
   50         | ID . LTHIRD expression RTHIRD
   65 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 95
    LTHIRD  shift, and go to state 96

    $default  reduce using rule 49 (variable)


State 68

   61 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable          go to state 92
    unary_expression  go to state 97
    factor            go to state 84


State 69

   67 factor: CONST_INT .

    $default  reduce using rule 67 (factor)


State 70

   68 factor: CONST_FLOAT .

    $default  reduce using rule 68 (factor)


State 71

   39 statement: compound_statement .

    $default  reduce using rule 39 (statement)


State 72

   37 statement: var_declaration .

    $default  reduce using rule 37 (statement)


State 73

   24 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 98

    declaration_list  go to state 14


State 74

   21 compound_statement: LCURL dummy_scope_function statements . RCURL
   36 statements: statements . statement

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 99
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statement             go to state 100
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 75

   35 statements: statement .

    $default  reduce using rule 35 (statements)


State 76

   38 statement: expression_statement .

    $default  reduce using rule 38 (statement)


State 77

   52 expression: variable . ASSIGNOP logic_expression
   64 factor: variable .
   69       | variable . INCOP
   70       | variable . DECOP

    INCOP     shift, and go to state 101
    DECOP     shift, and go to state 102
    ASSIGNOP  shift, and go to state 103

    $default  reduce using rule 64 (factor)


State 78

   48 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 79

   51 expression: logic_expression .

    $default  reduce using rule 51 (expression)


State 80

   53 logic_expression: rel_expression .
   54                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 105

    $default  reduce using rule 53 (logic_expression)


State 81

   55 rel_expression: simple_expression .
   56               | simple_expression . RELOP simple_expression
   58 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 106
    RELOP  shift, and go to state 107

    $default  reduce using rule 55 (rel_expression)


State 82

   57 simple_expression: term .
   60 term: term . MULOP unary_expression

    MULOP  shift, and go to state 108

    $default  reduce using rule 57 (simple_expression)


State 83

   59 term: unary_expression .

    $default  reduce using rule 59 (term)


State 84

   63 unary_expression: factor .

    $default  reduce using rule 63 (unary_expression)


State 85

   16 parameter_list: parameter_list error COMMA type_specifier ID .

    $default  reduce using rule 16 (parameter_list)


State 86

   41 statement: IF LPAREN . expression RPAREN statement
   42          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 109
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 87

   40 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    expression_statement  go to state 110
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 88

   43 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 111
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 89

   46 statement: RETURN SEMICOLON .

    $default  reduce using rule 46 (statement)


State 90

   45 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 91

   44 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 113


State 92

   64 factor: variable .
   69       | variable . INCOP
   70       | variable . DECOP

    INCOP  shift, and go to state 101
    DECOP  shift, and go to state 102

    $default  reduce using rule 64 (factor)


State 93

   62 unary_expression: NOT unary_expression .

    $default  reduce using rule 62 (unary_expression)


State 94

   66 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 114


State 95

   65 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    $default  reduce using rule 72 (argument_list)

    variable           go to state 92
    logic_expression   go to state 115
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84
    argument_list      go to state 116
    arguments          go to state 117


State 96

   50 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 118
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 97

   61 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 61 (unary_expression)


State 98

   32 declaration_list: ID .
   33                 | ID . LTHIRD CONST_INT RTHIRD
   34                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 32 (declaration_list)


State 99

   21 compound_statement: LCURL dummy_scope_function statements RCURL .

    $default  reduce using rule 21 (compound_statement)


State 100

   36 statements: statements statement .

    $default  reduce using rule 36 (statements)


State 101

   69 factor: variable INCOP .

    $default  reduce using rule 69 (factor)


State 102

   70 factor: variable DECOP .

    $default  reduce using rule 70 (factor)


State 103

   52 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 92
    logic_expression   go to state 119
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 104

   48 expression_statement: expression SEMICOLON .

    $default  reduce using rule 48 (expression_statement)


State 105

   54 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 92
    rel_expression     go to state 120
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 106

   58 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable          go to state 92
    term              go to state 121
    unary_expression  go to state 83
    factor            go to state 84


State 107

   56 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 92
    simple_expression  go to state 122
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 108

   60 term: term MULOP . unary_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable          go to state 92
    unary_expression  go to state 123
    factor            go to state 84


State 109

   41 statement: IF LPAREN expression . RPAREN statement
   42          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 124


State 110

   40 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    expression_statement  go to state 125
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 111

   43 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 126


State 112

   45 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 45 (statement)


State 113

   44 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 127


State 114

   66 factor: LPAREN expression RPAREN .

    $default  reduce using rule 66 (factor)


State 115

   74 arguments: logic_expression .

    $default  reduce using rule 74 (arguments)


State 116

   65 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 128


State 117

   71 argument_list: arguments .
   73 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 129

    $default  reduce using rule 71 (argument_list)


State 118

   50 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 130


State 119

   52 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 52 (expression)


State 120

   54 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 54 (logic_expression)


State 121

   58 simple_expression: simple_expression ADDOP term .
   60 term: term . MULOP unary_expression

    MULOP  shift, and go to state 108

    $default  reduce using rule 58 (simple_expression)


State 122

   56 rel_expression: simple_expression RELOP simple_expression .
   58 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 106

    $default  reduce using rule 56 (rel_expression)


State 123

   60 term: term MULOP unary_expression .

    $default  reduce using rule 60 (term)


State 124

   41 statement: IF LPAREN expression RPAREN . statement
   42          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statement             go to state 131
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 125

   40 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 77
    expression         go to state 132
    logic_expression   go to state 79
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 126

   43 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statement             go to state 133
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 127

   44 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 134


State 128

   65 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 65 (factor)


State 129

   73 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    ID           shift, and go to state 67
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    variable           go to state 92
    logic_expression   go to state 135
    rel_expression     go to state 80
    simple_expression  go to state 81
    term               go to state 82
    unary_expression   go to state 83
    factor             go to state 84


State 130

   50 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 50 (variable)


State 131

   41 statement: IF LPAREN expression RPAREN statement .
   42          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 136

    $default  reduce using rule 41 (statement)


State 132

   40 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 137


State 133

   43 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 43 (statement)


State 134

   44 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 44 (statement)


State 135

   73 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 73 (arguments)


State 136

   42 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statement             go to state 138
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 137

   40 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 58
    FOR          shift, and go to state 59
    WHILE        shift, and go to state 60
    RETURN       shift, and go to state 61
    PRINTLN      shift, and go to state 62
    NOT          shift, and go to state 63
    LPAREN       shift, and go to state 64
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 66
    ID           shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 68
    CONST_INT    shift, and go to state 69
    CONST_FLOAT  shift, and go to state 70

    compound_statement    go to state 71
    var_declaration       go to state 72
    type_specifier        go to state 73
    statement             go to state 139
    expression_statement  go to state 76
    variable              go to state 77
    expression            go to state 78
    logic_expression      go to state 79
    rel_expression        go to state 80
    simple_expression     go to state 81
    term                  go to state 82
    unary_expression      go to state 83
    factor                go to state 84


State 138

   42 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 42 (statement)


State 139

   40 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 40 (statement)
