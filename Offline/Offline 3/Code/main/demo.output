Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON
    9                 | type_specifier ID LPAREN RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN error RPAREN SEMICOLON

   11 $@1: %empty

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   13 $@2: %empty

   14 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement

   15 $@3: %empty

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement

   17 $@4: %empty

   18 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement

   19 parameter_list: parameter_list COMMA type_specifier ID
   20               | parameter_list error COMMA type_specifier ID
   21               | parameter_list COMMA type_specifier
   22               | parameter_list error COMMA type_specifier
   23               | type_specifier ID
   24               | type_specifier

   25 compound_statement: LCURL dummy_scope_function statements RCURL
   26                   | LCURL dummy_scope_function RCURL
   27                   | LCURL dummy_scope_function statements error RCURL
   28                   | LCURL dummy_scope_function error statements RCURL
   29                   | LCURL dummy_scope_function error RCURL

   30 dummy_scope_function: %empty

   31 var_declaration: type_specifier declaration_list SEMICOLON
   32                | type_specifier declaration_list error SEMICOLON

   33 type_specifier: INT
   34               | FLOAT
   35               | VOID

   36 declaration_list: declaration_list COMMA ID
   37                 | declaration_list error COMMA ID
   38                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   39                 | declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD
   40                 | declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD
   41                 | declaration_list error COMMA ID LTHIRD CONST_FLOAT RTHIRD
   42                 | ID
   43                 | ID LTHIRD CONST_INT RTHIRD
   44                 | ID LTHIRD CONST_FLOAT RTHIRD

   45 statements: statement
   46           | statements statement
   47           | statements error statement

   48 statement: var_declaration
   49          | expression_statement
   50          | compound_statement
   51          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   52          | IF LPAREN expression RPAREN statement
   53          | IF LPAREN expression RPAREN statement ELSE statement
   54          | WHILE LPAREN expression RPAREN statement
   55          | PRINTLN LPAREN ID RPAREN SEMICOLON
   56          | RETURN expression SEMICOLON
   57          | RETURN SEMICOLON

   58 expression_statement: SEMICOLON
   59                     | expression SEMICOLON

   60 variable: ID
   61         | ID LTHIRD expression RTHIRD

   62 expression: logic_expression
   63           | variable ASSIGNOP logic_expression

   64 logic_expression: rel_expression
   65                 | rel_expression LOGICOP rel_expression

   66 rel_expression: simple_expression
   67               | simple_expression RELOP simple_expression

   68 simple_expression: term
   69                  | simple_expression ADDOP term

   70 term: unary_expression
   71     | term MULOP unary_expression

   72 unary_expression: ADDOP unary_expression
   73                 | NOT unary_expression
   74                 | factor

   75 factor: variable
   76       | ID LPAREN argument_list RPAREN
   77       | LPAREN expression RPAREN
   78       | CONST_INT
   79       | CONST_FLOAT
   80       | variable INCOP
   81       | variable DECOP

   82 argument_list: arguments
   83              | %empty

   84 arguments: arguments COMMA logic_expression
   85          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 8 10 14 18 20 22 27 28 29 32 37 39 41 47
IF (258) 52 53
ELSE (259) 53
LOWER_THAN_ELSE (260)
FOR (261) 51
WHILE (262) 54
DO (263)
BREAK (264)
CHAR (265)
DOUBLE (266)
RETURN (267) 56 57
SWITCH (268)
CASE (269)
DEFAULT (270)
CONTINUE (271)
PRINTLN (272) 55
INCOP (273) 80
DECOP (274) 81
ASSIGNOP (275) 63
NOT (276) 73
LPAREN (277) 7 8 9 10 12 14 16 18 51 52 53 54 55 76 77
RPAREN (278) 7 8 9 10 12 14 16 18 51 52 53 54 55 76 77
LCURL (279) 25 26 27 28 29
RCURL (280) 25 26 27 28 29
LTHIRD (281) 38 39 40 41 43 44 61
RTHIRD (282) 38 39 40 41 43 44 61
COMMA (283) 19 20 21 22 36 37 38 39 40 41 84
SEMICOLON (284) 7 8 9 10 31 32 55 56 57 58 59
ID (285) 7 8 9 10 12 14 16 18 19 20 23 36 37 38 39 40 41 42 43 44 55
    60 61 76
INT (286) 33
FLOAT (287) 34
VOID (288) 35
ADDOP (289) 69 72
MULOP (290) 71
RELOP (291) 67
LOGICOP (292) 65
CONST_INT (293) 38 39 43 78
CONST_FLOAT (294) 40 41 44 79


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5 6, on right: 2 3
func_declaration (44)
    on left: 7 8 9 10, on right: 5
func_definition (45)
    on left: 12 14 16 18, on right: 6
$@1 (46)
    on left: 11, on right: 12
$@2 (47)
    on left: 13, on right: 14
$@3 (48)
    on left: 15, on right: 16
$@4 (49)
    on left: 17, on right: 18
parameter_list (50)
    on left: 19 20 21 22 23 24, on right: 7 8 12 14 19 20 21 22
compound_statement (51)
    on left: 25 26 27 28 29, on right: 12 14 16 18 50
dummy_scope_function (52)
    on left: 30, on right: 25 26 27 28 29
var_declaration (53)
    on left: 31 32, on right: 4 48
type_specifier (54)
    on left: 33 34 35, on right: 7 8 9 10 12 14 16 18 19 20 21 22 23
    24 31 32
declaration_list (55)
    on left: 36 37 38 39 40 41 42 43 44, on right: 31 32 36 37 38 39
    40 41
statements (56)
    on left: 45 46 47, on right: 25 27 28 46 47
statement (57)
    on left: 48 49 50 51 52 53 54 55 56 57, on right: 45 46 47 51 52
    53 54
expression_statement (58)
    on left: 58 59, on right: 49 51
variable (59)
    on left: 60 61, on right: 63 75 80 81
expression (60)
    on left: 62 63, on right: 51 52 53 54 56 59 61 77
logic_expression (61)
    on left: 64 65, on right: 62 63 84 85
rel_expression (62)
    on left: 66 67, on right: 64 65
simple_expression (63)
    on left: 68 69, on right: 66 67 69
term (64)
    on left: 70 71, on right: 68 69 71
unary_expression (65)
    on left: 72 73 74, on right: 70 71 72 73
factor (66)
    on left: 75 76 77 78 79 80 81, on right: 74
argument_list (67)
    on left: 82 83, on right: 76
arguments (68)
    on left: 84 85, on right: 82 84


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   33 type_specifier: INT .

    $default  reduce using rule 33 (type_specifier)


State 2

   34 type_specifier: FLOAT .

    $default  reduce using rule 34 (type_specifier)


State 3

   35 type_specifier: VOID .

    $default  reduce using rule 35 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN parameter_list error RPAREN SEMICOLON
    9                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10                 | type_specifier . ID LPAREN error RPAREN SEMICOLON
   12 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   14                | type_specifier . ID LPAREN parameter_list error RPAREN $@2 compound_statement
   16                | type_specifier . ID LPAREN RPAREN $@3 compound_statement
   18                | type_specifier . ID LPAREN error RPAREN $@4 compound_statement
   31 var_declaration: type_specifier . declaration_list SEMICOLON
   32                | type_specifier . declaration_list error SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN parameter_list error RPAREN SEMICOLON
    9                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10                 | type_specifier ID . LPAREN error RPAREN SEMICOLON
   12 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   14                | type_specifier ID . LPAREN parameter_list error RPAREN $@2 compound_statement
   16                | type_specifier ID . LPAREN RPAREN $@3 compound_statement
   18                | type_specifier ID . LPAREN error RPAREN $@4 compound_statement
   42 declaration_list: ID .
   43                 | ID . LTHIRD CONST_INT RTHIRD
   44                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 42 (declaration_list)


State 14

   31 var_declaration: type_specifier declaration_list . SEMICOLON
   32                | type_specifier declaration_list . error SEMICOLON
   36 declaration_list: declaration_list . COMMA ID
   37                 | declaration_list . error COMMA ID
   38                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD
   39                 | declaration_list . error COMMA ID LTHIRD CONST_INT RTHIRD
   40                 | declaration_list . COMMA ID LTHIRD CONST_FLOAT RTHIRD
   41                 | declaration_list . error COMMA ID LTHIRD CONST_FLOAT RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . parameter_list error RPAREN SEMICOLON
    9                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN . error RPAREN SEMICOLON
   12 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   14                | type_specifier ID LPAREN . parameter_list error RPAREN $@2 compound_statement
   16                | type_specifier ID LPAREN . RPAREN $@3 compound_statement
   18                | type_specifier ID LPAREN . error RPAREN $@4 compound_statement

    error   shift, and go to state 20
    RPAREN  shift, and go to state 21
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3

    parameter_list  go to state 22
    type_specifier  go to state 23


State 16

   43 declaration_list: ID LTHIRD . CONST_INT RTHIRD
   44                 | ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25


State 17

   32 var_declaration: type_specifier declaration_list error . SEMICOLON
   37 declaration_list: declaration_list error . COMMA ID
   39                 | declaration_list error . COMMA ID LTHIRD CONST_INT RTHIRD
   41                 | declaration_list error . COMMA ID LTHIRD CONST_FLOAT RTHIRD

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 27


State 18

   36 declaration_list: declaration_list COMMA . ID
   38                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD
   40                 | declaration_list COMMA . ID LTHIRD CONST_FLOAT RTHIRD

    ID  shift, and go to state 28


State 19

   31 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 31 (var_declaration)


State 20

   10 func_declaration: type_specifier ID LPAREN error . RPAREN SEMICOLON
   18 func_definition: type_specifier ID LPAREN error . RPAREN $@4 compound_statement

    RPAREN  shift, and go to state 29


State 21

    9 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   16 func_definition: type_specifier ID LPAREN RPAREN . $@3 compound_statement

    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 15 ($@3)

    $@3  go to state 31


State 22

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list . error RPAREN SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   14                | type_specifier ID LPAREN parameter_list . error RPAREN $@2 compound_statement
   19 parameter_list: parameter_list . COMMA type_specifier ID
   20               | parameter_list . error COMMA type_specifier ID
   21               | parameter_list . COMMA type_specifier
   22               | parameter_list . error COMMA type_specifier

    error   shift, and go to state 32
    RPAREN  shift, and go to state 33
    COMMA   shift, and go to state 34


State 23

   23 parameter_list: type_specifier . ID
   24               | type_specifier .

    ID  shift, and go to state 35

    $default  reduce using rule 24 (parameter_list)


State 24

   43 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 25

   44 declaration_list: ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 37


State 26

   37 declaration_list: declaration_list error COMMA . ID
   39                 | declaration_list error COMMA . ID LTHIRD CONST_INT RTHIRD
   41                 | declaration_list error COMMA . ID LTHIRD CONST_FLOAT RTHIRD

    ID  shift, and go to state 38


State 27

   32 var_declaration: type_specifier declaration_list error SEMICOLON .

    $default  reduce using rule 32 (var_declaration)


State 28

   36 declaration_list: declaration_list COMMA ID .
   38                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD
   40                 | declaration_list COMMA ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 39

    $default  reduce using rule 36 (declaration_list)


State 29

   10 func_declaration: type_specifier ID LPAREN error RPAREN . SEMICOLON
   18 func_definition: type_specifier ID LPAREN error RPAREN . $@4 compound_statement

    SEMICOLON  shift, and go to state 40

    $default  reduce using rule 17 ($@4)

    $@4  go to state 41


State 30

    9 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 9 (func_declaration)


State 31

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 43


State 32

    8 func_declaration: type_specifier ID LPAREN parameter_list error . RPAREN SEMICOLON
   14 func_definition: type_specifier ID LPAREN parameter_list error . RPAREN $@2 compound_statement
   20 parameter_list: parameter_list error . COMMA type_specifier ID
   22               | parameter_list error . COMMA type_specifier

    RPAREN  shift, and go to state 44
    COMMA   shift, and go to state 45


State 33

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 46

    $default  reduce using rule 11 ($@1)

    $@1  go to state 47


State 34

   19 parameter_list: parameter_list COMMA . type_specifier ID
   21               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 48


State 35

   23 parameter_list: type_specifier ID .

    $default  reduce using rule 23 (parameter_list)


State 36

   43 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 43 (declaration_list)


State 37

   44 declaration_list: ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 44 (declaration_list)


State 38

   37 declaration_list: declaration_list error COMMA ID .
   39                 | declaration_list error COMMA ID . LTHIRD CONST_INT RTHIRD
   41                 | declaration_list error COMMA ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 49

    $default  reduce using rule 37 (declaration_list)


State 39

   38 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD
   40                 | declaration_list COMMA ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51


State 40

   10 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON .

    $default  reduce using rule 10 (func_declaration)


State 41

   18 func_definition: type_specifier ID LPAREN error RPAREN $@4 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 52


State 42

   25 compound_statement: LCURL . dummy_scope_function statements RCURL
   26                   | LCURL . dummy_scope_function RCURL
   27                   | LCURL . dummy_scope_function statements error RCURL
   28                   | LCURL . dummy_scope_function error statements RCURL
   29                   | LCURL . dummy_scope_function error RCURL

    $default  reduce using rule 30 (dummy_scope_function)

    dummy_scope_function  go to state 53


State 43

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement .

    $default  reduce using rule 16 (func_definition)


State 44

    8 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN . SEMICOLON
   14 func_definition: type_specifier ID LPAREN parameter_list error RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 54

    $default  reduce using rule 13 ($@2)

    $@2  go to state 55


State 45

   20 parameter_list: parameter_list error COMMA . type_specifier ID
   22               | parameter_list error COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 56


State 46

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 47

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 57


State 48

   19 parameter_list: parameter_list COMMA type_specifier . ID
   21               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 58

    $default  reduce using rule 21 (parameter_list)


State 49

   39 declaration_list: declaration_list error COMMA ID LTHIRD . CONST_INT RTHIRD
   41                 | declaration_list error COMMA ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 59
    CONST_FLOAT  shift, and go to state 60


State 50

   38 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 61


State 51

   40 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 62


State 52

   18 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement .

    $default  reduce using rule 18 (func_definition)


State 53

   25 compound_statement: LCURL dummy_scope_function . statements RCURL
   26                   | LCURL dummy_scope_function . RCURL
   27                   | LCURL dummy_scope_function . statements error RCURL
   28                   | LCURL dummy_scope_function . error statements RCURL
   29                   | LCURL dummy_scope_function . error RCURL

    error        shift, and go to state 63
    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 71
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statements            go to state 80
    statement             go to state 81
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 54

    8 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 55

   14 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 42

    compound_statement  go to state 91


State 56

   20 parameter_list: parameter_list error COMMA type_specifier . ID
   22               | parameter_list error COMMA type_specifier .

    ID  shift, and go to state 92

    $default  reduce using rule 22 (parameter_list)


State 57

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 58

   19 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 19 (parameter_list)


State 59

   39 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 93


State 60

   41 declaration_list: declaration_list error COMMA ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 94


State 61

   38 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 38 (declaration_list)


State 62

   40 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 40 (declaration_list)


State 63

   28 compound_statement: LCURL dummy_scope_function error . statements RCURL
   29                   | LCURL dummy_scope_function error . RCURL

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 95
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statements            go to state 96
    statement             go to state 81
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 64

   52 statement: IF . LPAREN expression RPAREN statement
   53          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 97


State 65

   51 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 98


State 66

   54 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 99


State 67

   56 statement: RETURN . expression SEMICOLON
   57          | RETURN . SEMICOLON

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    SEMICOLON    shift, and go to state 100
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 101
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 68

   55 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 102


State 69

   73 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable          go to state 103
    unary_expression  go to state 104
    factor            go to state 90


State 70

   77 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 105
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 71

   26 compound_statement: LCURL dummy_scope_function RCURL .

    $default  reduce using rule 26 (compound_statement)


State 72

   58 expression_statement: SEMICOLON .

    $default  reduce using rule 58 (expression_statement)


State 73

   60 variable: ID .
   61         | ID . LTHIRD expression RTHIRD
   76 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 106
    LTHIRD  shift, and go to state 107

    $default  reduce using rule 60 (variable)


State 74

   72 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable          go to state 103
    unary_expression  go to state 108
    factor            go to state 90


State 75

   78 factor: CONST_INT .

    $default  reduce using rule 78 (factor)


State 76

   79 factor: CONST_FLOAT .

    $default  reduce using rule 79 (factor)


State 77

   50 statement: compound_statement .

    $default  reduce using rule 50 (statement)


State 78

   48 statement: var_declaration .

    $default  reduce using rule 48 (statement)


State 79

   31 var_declaration: type_specifier . declaration_list SEMICOLON
   32                | type_specifier . declaration_list error SEMICOLON

    ID  shift, and go to state 109

    declaration_list  go to state 14


State 80

   25 compound_statement: LCURL dummy_scope_function statements . RCURL
   27                   | LCURL dummy_scope_function statements . error RCURL
   46 statements: statements . statement
   47           | statements . error statement

    error        shift, and go to state 110
    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 111
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 112
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 81

   45 statements: statement .

    $default  reduce using rule 45 (statements)


State 82

   49 statement: expression_statement .

    $default  reduce using rule 49 (statement)


State 83

   63 expression: variable . ASSIGNOP logic_expression
   75 factor: variable .
   80       | variable . INCOP
   81       | variable . DECOP

    INCOP     shift, and go to state 113
    DECOP     shift, and go to state 114
    ASSIGNOP  shift, and go to state 115

    $default  reduce using rule 75 (factor)


State 84

   59 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 85

   62 expression: logic_expression .

    $default  reduce using rule 62 (expression)


State 86

   64 logic_expression: rel_expression .
   65                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 117

    $default  reduce using rule 64 (logic_expression)


State 87

   66 rel_expression: simple_expression .
   67               | simple_expression . RELOP simple_expression
   69 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 118
    RELOP  shift, and go to state 119

    $default  reduce using rule 66 (rel_expression)


State 88

   68 simple_expression: term .
   71 term: term . MULOP unary_expression

    MULOP  shift, and go to state 120

    $default  reduce using rule 68 (simple_expression)


State 89

   70 term: unary_expression .

    $default  reduce using rule 70 (term)


State 90

   74 unary_expression: factor .

    $default  reduce using rule 74 (unary_expression)


State 91

   14 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement .

    $default  reduce using rule 14 (func_definition)


State 92

   20 parameter_list: parameter_list error COMMA type_specifier ID .

    $default  reduce using rule 20 (parameter_list)


State 93

   39 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 39 (declaration_list)


State 94

   41 declaration_list: declaration_list error COMMA ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 41 (declaration_list)


State 95

   29 compound_statement: LCURL dummy_scope_function error RCURL .

    $default  reduce using rule 29 (compound_statement)


State 96

   28 compound_statement: LCURL dummy_scope_function error statements . RCURL
   46 statements: statements . statement
   47           | statements . error statement

    error        shift, and go to state 121
    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 122
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 112
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 97

   52 statement: IF LPAREN . expression RPAREN statement
   53          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 123
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 98

   51 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    expression_statement  go to state 124
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 99

   54 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 125
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 100

   57 statement: RETURN SEMICOLON .

    $default  reduce using rule 57 (statement)


State 101

   56 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 102

   55 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 127


State 103

   75 factor: variable .
   80       | variable . INCOP
   81       | variable . DECOP

    INCOP  shift, and go to state 113
    DECOP  shift, and go to state 114

    $default  reduce using rule 75 (factor)


State 104

   73 unary_expression: NOT unary_expression .

    $default  reduce using rule 73 (unary_expression)


State 105

   77 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 128


State 106

   76 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    $default  reduce using rule 83 (argument_list)

    variable           go to state 103
    logic_expression   go to state 129
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90
    argument_list      go to state 130
    arguments          go to state 131


State 107

   61 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 132
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 108

   72 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 72 (unary_expression)


State 109

   42 declaration_list: ID .
   43                 | ID . LTHIRD CONST_INT RTHIRD
   44                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 42 (declaration_list)


State 110

   27 compound_statement: LCURL dummy_scope_function statements error . RCURL
   47 statements: statements error . statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    RCURL        shift, and go to state 133
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 134
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 111

   25 compound_statement: LCURL dummy_scope_function statements RCURL .

    $default  reduce using rule 25 (compound_statement)


State 112

   46 statements: statements statement .

    $default  reduce using rule 46 (statements)


State 113

   80 factor: variable INCOP .

    $default  reduce using rule 80 (factor)


State 114

   81 factor: variable DECOP .

    $default  reduce using rule 81 (factor)


State 115

   63 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 103
    logic_expression   go to state 135
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 116

   59 expression_statement: expression SEMICOLON .

    $default  reduce using rule 59 (expression_statement)


State 117

   65 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 103
    rel_expression     go to state 136
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 118

   69 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable          go to state 103
    term              go to state 137
    unary_expression  go to state 89
    factor            go to state 90


State 119

   67 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 103
    simple_expression  go to state 138
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 120

   71 term: term MULOP . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable          go to state 103
    unary_expression  go to state 139
    factor            go to state 90


State 121

   47 statements: statements error . statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 134
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 122

   28 compound_statement: LCURL dummy_scope_function error statements RCURL .

    $default  reduce using rule 28 (compound_statement)


State 123

   52 statement: IF LPAREN expression . RPAREN statement
   53          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 140


State 124

   51 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    expression_statement  go to state 141
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 125

   54 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 142


State 126

   56 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 56 (statement)


State 127

   55 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 143


State 128

   77 factor: LPAREN expression RPAREN .

    $default  reduce using rule 77 (factor)


State 129

   85 arguments: logic_expression .

    $default  reduce using rule 85 (arguments)


State 130

   76 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 144


State 131

   82 argument_list: arguments .
   84 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 145

    $default  reduce using rule 82 (argument_list)


State 132

   61 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 146


State 133

   27 compound_statement: LCURL dummy_scope_function statements error RCURL .

    $default  reduce using rule 27 (compound_statement)


State 134

   47 statements: statements error statement .

    $default  reduce using rule 47 (statements)


State 135

   63 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 63 (expression)


State 136

   65 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 65 (logic_expression)


State 137

   69 simple_expression: simple_expression ADDOP term .
   71 term: term . MULOP unary_expression

    MULOP  shift, and go to state 120

    $default  reduce using rule 69 (simple_expression)


State 138

   67 rel_expression: simple_expression RELOP simple_expression .
   69 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 118

    $default  reduce using rule 67 (rel_expression)


State 139

   71 term: term MULOP unary_expression .

    $default  reduce using rule 71 (term)


State 140

   52 statement: IF LPAREN expression RPAREN . statement
   53          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 147
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 141

   51 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 83
    expression         go to state 148
    logic_expression   go to state 85
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 142

   54 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 149
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 143

   55 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 144

   76 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 76 (factor)


State 145

   84 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    ID           shift, and go to state 73
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    variable           go to state 103
    logic_expression   go to state 151
    rel_expression     go to state 86
    simple_expression  go to state 87
    term               go to state 88
    unary_expression   go to state 89
    factor             go to state 90


State 146

   61 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 61 (variable)


State 147

   52 statement: IF LPAREN expression RPAREN statement .
   53          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 152

    $default  reduce using rule 52 (statement)


State 148

   51 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 153


State 149

   54 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 54 (statement)


State 150

   55 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 55 (statement)


State 151

   84 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 84 (arguments)


State 152

   53 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 154
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 153

   51 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 64
    FOR          shift, and go to state 65
    WHILE        shift, and go to state 66
    RETURN       shift, and go to state 67
    PRINTLN      shift, and go to state 68
    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 70
    LCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 72
    ID           shift, and go to state 73
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76

    compound_statement    go to state 77
    var_declaration       go to state 78
    type_specifier        go to state 79
    statement             go to state 155
    expression_statement  go to state 82
    variable              go to state 83
    expression            go to state 84
    logic_expression      go to state 85
    rel_expression        go to state 86
    simple_expression     go to state 87
    term                  go to state 88
    unary_expression      go to state 89
    factor                go to state 90


State 154

   53 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 53 (statement)


State 155

   51 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 51 (statement)
