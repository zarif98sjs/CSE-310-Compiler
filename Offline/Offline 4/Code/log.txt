Line 1: type_specifier : INT

int

Line 2: type_specifier : INT

int

Line 2: declaration_list : ID

x

Line 2: declaration_list : declaration_list COMMA ID

x,y

Line 2: declaration_list : declaration_list COMMA ID

x,y,z

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;

Line 2: statement : var_declaration

int x,y,z;

Line 2: statements : statement

int x,y,z;

Line 3: variable : ID

x

Line 3: factor : CONST_INT

102

Line 3: unary_expression : factor

102

Line 3: term : unary_expression

102

Line 3: simple_expression : term

102

Line 3: factor : CONST_INT

12

Line 3: unary_expression : factor

12

Line 3: term : unary_expression

12

Line 3: simple_expression : simple_expression ADDOP term

102+12

Line 3: rel_expression : simple_expression

102+12

Line 3: logic_expression : rel_expression

102+12

Line 3: expression : variable ASSIGNOP logic_expression

x=102+12

Line 3: expression_statement : expression SEMICOLON

x=102+12;

Line 3: statement : expression_statement

x=102+12;

Line 3: statements : statements statement

int x,y,z;
x=102+12;

Line 4: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 4: statements : statements statement

int x,y,z;
x=102+12;
printf(x);

Line 5: compound_statement : LCURL statements RCURL

{
int x,y,z;
x=102+12;
printf(x);
}

ScopeTable # 1.1
0 --> < x , ID > 
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1
1 --> < main , ID > 

Line 5: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int x,y,z;
x=102+12;
printf(x);
}

Line 5: unit : func_definition

int main(){
int x,y,z;
x=102+12;
printf(x);
}

Line 5: program : unit

int main(){
int x,y,z;
x=102+12;
printf(x);
}

Line 5: start : program

ScopeTable # 1
1 --> < main , ID > 

Total lines: 5
Total errors: 0
