Line 1: type_specifier : INT

int

Line 1: declaration_list : ID LTHIRD CONST_INT RTHIRD

ar[10]

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int ar[10];

Line 1: unit : var_declaration

int ar[10];

Line 1: program : unit

int ar[10];

Line 2: type_specifier : INT

int

Line 4: type_specifier : INT

int

Line 4: declaration_list : ID LTHIRD CONST_INT RTHIRD

x[10]

Line 4: var_declaration : type_specifier declaration_list SEMICOLON

int x[10];

Line 4: statement : var_declaration

int x[10];

Line 4: statements : statement

int x[10];

Line 6: factor : CONST_INT

2

Line 6: unary_expression : factor

2

Line 6: term : unary_expression

2

Line 6: simple_expression : term

2

Line 6: rel_expression : simple_expression

2

Line 6: logic_expression : rel_expression

2

Line 6: expression : logic_expression

2

Line 6: variable : ID LTHIRD expression RTHIRD

x[2]

Line 6: factor : CONST_INT

20

Line 6: unary_expression : factor

20

Line 6: term : unary_expression

20

Line 6: simple_expression : term

20

Line 6: rel_expression : simple_expression

20

Line 6: logic_expression : rel_expression

20

Line 6: expression : variable ASSIGNOP logic_expression

x[2]=20

Line 6: expression_statement : expression SEMICOLON

x[2]=20;

Line 6: statement : expression_statement

x[2]=20;

Line 6: statements : statements statement

int x[10];
x[2]=20;

Line 7: factor : CONST_INT

2

Line 7: unary_expression : factor

2

Line 7: term : unary_expression

2

Line 7: simple_expression : term

2

Line 7: rel_expression : simple_expression

2

Line 7: logic_expression : rel_expression

2

Line 7: expression : logic_expression

2

Line 7: variable : ID LTHIRD expression RTHIRD

x[2]

Line 7: factor : variable

x[2]

Line 7: unary_expression : factor

x[2]

Line 7: term : unary_expression

x[2]

Line 7: simple_expression : term

x[2]

Line 7: rel_expression : simple_expression

x[2]

Line 7: logic_expression : rel_expression

x[2]

Line 7: expression : logic_expression

x[2]

Line 7: statement : RETURN expression SEMICOLON

return x[2];

Line 7: statements : statements statement

int x[10];
x[2]=20;
return x[2];

Line 8: compound_statement : LCURL statements RCURL

{
int x[10];
x[2]=20;
return x[2];
}

ScopeTable # 1.1
0 --> < x , ID > 

ScopeTable # 1
1 --> < ar , ID > 
12 --> < f , ID > 

Line 8: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int f(){
int x[10];
x[2]=20;
return x[2];
}

Line 8: unit : func_definition

int f(){
int x[10];
x[2]=20;
return x[2];
}

Line 8: program : program unit

int ar[10];
int f(){
int x[10];
x[2]=20;
return x[2];
}

Line 10: type_specifier : INT

int

Line 12: factor : CONST_INT

2

Line 12: unary_expression : factor

2

Line 12: term : unary_expression

2

Line 12: simple_expression : term

2

Line 12: rel_expression : simple_expression

2

Line 12: logic_expression : rel_expression

2

Line 12: expression : logic_expression

2

Line 12: variable : ID LTHIRD expression RTHIRD

ar[2]

Line 12: factor : CONST_INT

3

Line 12: unary_expression : factor

3

Line 12: term : unary_expression

3

Line 12: simple_expression : term

3

Line 12: rel_expression : simple_expression

3

Line 12: logic_expression : rel_expression

3

Line 12: expression : variable ASSIGNOP logic_expression

ar[2]=3

Line 12: expression_statement : expression SEMICOLON

ar[2]=3;

Line 12: statement : expression_statement

ar[2]=3;

Line 12: statements : statement

ar[2]=3;

Line 13: factor : CONST_INT

2

Line 13: unary_expression : factor

2

Line 13: term : unary_expression

2

Line 13: simple_expression : term

2

Line 13: rel_expression : simple_expression

2

Line 13: logic_expression : rel_expression

2

Line 13: expression : logic_expression

2

Line 13: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(ar[2]);

Line 13: statements : statements statement

ar[2]=3;
printf(ar[2]);

Line 14: type_specifier : INT

int

Line 14: declaration_list : ID

re

Line 14: var_declaration : type_specifier declaration_list SEMICOLON

int re;

Line 14: statement : var_declaration

int re;

Line 14: statements : statements statement

ar[2]=3;
printf(ar[2]);
int re;

Line 15: variable : ID

re

Line 15: argument_list : 

Line 15: factor : ID LPAREN argument_list RPAREN

f()

Line 15: unary_expression : factor

f()

Line 15: term : unary_expression

f()

Line 15: simple_expression : term

f()

Line 15: rel_expression : simple_expression

f()

Line 15: logic_expression : rel_expression

f()

Line 15: expression : variable ASSIGNOP logic_expression

re=f()

Line 15: expression_statement : expression SEMICOLON

re=f();

Line 15: statement : expression_statement

re=f();

Line 15: statements : statements statement

ar[2]=3;
printf(ar[2]);
int re;
re=f();

Line 16: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(re);

Line 16: statements : statements statement

ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);

Line 17: factor : CONST_INT

0

Line 17: unary_expression : factor

0

Line 17: term : unary_expression

0

Line 17: simple_expression : term

0

Line 17: rel_expression : simple_expression

0

Line 17: logic_expression : rel_expression

0

Line 17: expression : logic_expression

0

Line 17: statement : RETURN expression SEMICOLON

return 0;

Line 17: statements : statements statement

ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);
return 0;

Line 18: compound_statement : LCURL statements RCURL

{
ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);
return 0;
}

ScopeTable # 1.2
5 --> < re , ID > 

ScopeTable # 1
1 --> < ar , ID > < main , ID > 
12 --> < f , ID > 

Line 18: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);
return 0;
}

Line 18: unit : func_definition

int main(){
ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);
return 0;
}

Line 18: program : program unit

int ar[10];
int f(){
int x[10];
x[2]=20;
return x[2];
}
int main(){
ar[2]=3;
printf(ar[2]);
int re;
re=f();
printf(re);
return 0;
}

Line 18: start : program

ScopeTable # 1
1 --> < ar , ID > < main , ID > 
12 --> < f , ID > 

Total lines: 18
Total errors: 0
