Line 1: type_specifier : INT

int

Line 3: type_specifier : INT

int

Line 3: declaration_list : ID LTHIRD CONST_INT RTHIRD

d[4]

Line 3: var_declaration : type_specifier declaration_list SEMICOLON

int d[4];

Line 3: statement : var_declaration

int d[4];

Line 3: statements : statement

int d[4];

Line 4: factor : CONST_INT

0

Line 4: unary_expression : factor

0

Line 4: term : unary_expression

0

Line 4: simple_expression : term

0

Line 4: rel_expression : simple_expression

0

Line 4: logic_expression : rel_expression

0

Line 4: expression : logic_expression

0

Line 4: variable : ID LTHIRD expression RTHIRD

d[0]

Line 4: factor : CONST_INT

20

Line 4: unary_expression : factor

20

Line 4: term : unary_expression

20

Line 4: simple_expression : term

20

Line 4: rel_expression : simple_expression

20

Line 4: logic_expression : rel_expression

20

Line 4: expression : variable ASSIGNOP logic_expression

d[0]=20

Line 4: expression_statement : expression SEMICOLON

d[0]=20;

Line 4: statement : expression_statement

d[0]=20;

Line 4: statements : statements statement

int d[4];
d[0]=20;

Line 5: factor : CONST_INT

1

Line 5: unary_expression : factor

1

Line 5: term : unary_expression

1

Line 5: simple_expression : term

1

Line 5: rel_expression : simple_expression

1

Line 5: logic_expression : rel_expression

1

Line 5: expression : logic_expression

1

Line 5: variable : ID LTHIRD expression RTHIRD

d[1]

Line 5: factor : CONST_INT

40

Line 5: unary_expression : factor

40

Line 5: term : unary_expression

40

Line 5: simple_expression : term

40

Line 5: rel_expression : simple_expression

40

Line 5: logic_expression : rel_expression

40

Line 5: expression : variable ASSIGNOP logic_expression

d[1]=40

Line 5: expression_statement : expression SEMICOLON

d[1]=40;

Line 5: statement : expression_statement

d[1]=40;

Line 5: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;

Line 7: type_specifier : INT

int

Line 7: declaration_list : ID

a

Line 7: declaration_list : declaration_list COMMA ID

a,b

Line 7: declaration_list : declaration_list COMMA ID

a,b,c

Line 7: var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c;

Line 7: statement : var_declaration

int a,b,c;

Line 7: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;

Line 9: variable : ID

a

Line 9: factor : CONST_INT

10

Line 9: unary_expression : factor

10

Line 9: term : unary_expression

10

Line 9: simple_expression : term

10

Line 9: rel_expression : simple_expression

10

Line 9: logic_expression : rel_expression

10

Line 9: expression : variable ASSIGNOP logic_expression

a=10

Line 9: expression_statement : expression SEMICOLON

a=10;

Line 9: statement : expression_statement

a=10;

Line 9: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;

Line 10: variable : ID

b

Line 10: factor : CONST_INT

14

Line 10: unary_expression : factor

14

Line 10: term : unary_expression

14

Line 10: simple_expression : term

14

Line 10: rel_expression : simple_expression

14

Line 10: logic_expression : rel_expression

14

Line 10: expression : variable ASSIGNOP logic_expression

b=14

Line 10: expression_statement : expression SEMICOLON

b=14;

Line 10: statement : expression_statement

b=14;

Line 10: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;

Line 11: variable : ID

c

Line 11: factor : CONST_INT

16

Line 11: unary_expression : factor

16

Line 11: term : unary_expression

16

Line 11: simple_expression : term

16

Line 11: rel_expression : simple_expression

16

Line 11: logic_expression : rel_expression

16

Line 11: expression : variable ASSIGNOP logic_expression

c=16

Line 11: expression_statement : expression SEMICOLON

c=16;

Line 11: statement : expression_statement

c=16;

Line 11: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;

Line 13: type_specifier : INT

int

Line 13: declaration_list : ID

x

Line 13: var_declaration : type_specifier declaration_list SEMICOLON

int x;

Line 13: statement : var_declaration

int x;

Line 13: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;

Line 15: variable : ID

x

Line 15: factor : CONST_INT

0

Line 15: unary_expression : factor

0

Line 15: term : unary_expression

0

Line 15: simple_expression : term

0

Line 15: rel_expression : simple_expression

0

Line 15: logic_expression : rel_expression

0

Line 15: expression : logic_expression

0

Line 15: variable : ID LTHIRD expression RTHIRD

d[0]

Line 15: factor : variable

d[0]

Line 15: unary_expression : factor

d[0]

Line 15: term : unary_expression

d[0]

Line 15: simple_expression : term

d[0]

Line 15: factor : CONST_INT

1

Line 15: unary_expression : factor

1

Line 15: term : unary_expression

1

Line 15: simple_expression : term

1

Line 15: rel_expression : simple_expression

1

Line 15: logic_expression : rel_expression

1

Line 15: expression : logic_expression

1

Line 15: variable : ID LTHIRD expression RTHIRD

d[1]

Line 15: factor : variable

d[1]

Line 15: unary_expression : factor

d[1]

Line 15: term : unary_expression

d[1]

Line 15: simple_expression : simple_expression ADDOP term

d[0]-d[1]

Line 15: rel_expression : simple_expression

d[0]-d[1]

Line 15: logic_expression : rel_expression

d[0]-d[1]

Line 15: expression : variable ASSIGNOP logic_expression

x=d[0]-d[1]

Line 15: expression_statement : expression SEMICOLON

x=d[0]-d[1];

Line 15: statement : expression_statement

x=d[0]-d[1];

Line 15: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];

Line 16: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 16: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);

Line 18: variable : ID

x

Line 18: factor : CONST_INT

0

Line 18: unary_expression : factor

0

Line 18: term : unary_expression

0

Line 18: simple_expression : term

0

Line 18: rel_expression : simple_expression

0

Line 18: logic_expression : rel_expression

0

Line 18: expression : logic_expression

0

Line 18: variable : ID LTHIRD expression RTHIRD

d[0]

Line 18: factor : variable

d[0]

Line 18: unary_expression : factor

d[0]

Line 18: term : unary_expression

d[0]

Line 18: simple_expression : term

d[0]

Line 18: factor : CONST_INT

1

Line 18: unary_expression : factor

1

Line 18: term : unary_expression

1

Line 18: simple_expression : term

1

Line 18: rel_expression : simple_expression

1

Line 18: logic_expression : rel_expression

1

Line 18: expression : logic_expression

1

Line 18: variable : ID LTHIRD expression RTHIRD

d[1]

Line 18: factor : variable

d[1]

Line 18: unary_expression : factor

d[1]

Line 18: term : unary_expression

d[1]

Line 18: simple_expression : simple_expression ADDOP term

d[0]-d[1]

Line 18: variable : ID

c

Line 18: factor : variable

c

Line 18: unary_expression : factor

c

Line 18: term : unary_expression

c

Line 18: simple_expression : simple_expression ADDOP term

d[0]-d[1]+c

Line 18: rel_expression : simple_expression

d[0]-d[1]+c

Line 18: logic_expression : rel_expression

d[0]-d[1]+c

Line 18: expression : variable ASSIGNOP logic_expression

x=d[0]-d[1]+c

Line 18: expression_statement : expression SEMICOLON

x=d[0]-d[1]+c;

Line 18: statement : expression_statement

x=d[0]-d[1]+c;

Line 18: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;

Line 19: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 19: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);

Line 21: variable : ID

x

Line 21: variable : ID

a

Line 21: factor : variable

a

Line 21: unary_expression : factor

a

Line 21: term : unary_expression

a

Line 21: simple_expression : term

a

Line 21: variable : ID

b

Line 21: factor : variable

b

Line 21: unary_expression : factor

b

Line 21: term : unary_expression

b

Line 21: simple_expression : simple_expression ADDOP term

a+b

Line 21: variable : ID

c

Line 21: factor : variable

c

Line 21: unary_expression : factor

c

Line 21: term : unary_expression

c

Line 21: simple_expression : simple_expression ADDOP term

a+b+c

Line 21: rel_expression : simple_expression

a+b+c

Line 21: logic_expression : rel_expression

a+b+c

Line 21: expression : variable ASSIGNOP logic_expression

x=a+b+c

Line 21: expression_statement : expression SEMICOLON

x=a+b+c;

Line 21: statement : expression_statement

x=a+b+c;

Line 21: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;

Line 22: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 22: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);

Line 24: variable : ID

x

Line 24: factor : CONST_INT

0

Line 24: unary_expression : factor

0

Line 24: term : unary_expression

0

Line 24: simple_expression : term

0

Line 24: rel_expression : simple_expression

0

Line 24: logic_expression : rel_expression

0

Line 24: expression : logic_expression

0

Line 24: variable : ID LTHIRD expression RTHIRD

d[0]

Line 24: factor : variable

d[0]

Line 24: unary_expression : factor

d[0]

Line 24: term : unary_expression

d[0]

Line 24: simple_expression : term

d[0]

Line 24: variable : ID

c

Line 24: factor : variable

c

Line 24: unary_expression : factor

c

Line 24: term : unary_expression

c

Line 24: simple_expression : simple_expression ADDOP term

d[0]-c

Line 24: factor : CONST_INT

1

Line 24: unary_expression : factor

1

Line 24: term : unary_expression

1

Line 24: simple_expression : term

1

Line 24: rel_expression : simple_expression

1

Line 24: logic_expression : rel_expression

1

Line 24: expression : logic_expression

1

Line 24: variable : ID LTHIRD expression RTHIRD

d[1]

Line 24: factor : variable

d[1]

Line 24: unary_expression : factor

d[1]

Line 24: term : unary_expression

d[1]

Line 24: simple_expression : simple_expression ADDOP term

d[0]-c-d[1]

Line 24: rel_expression : simple_expression

d[0]-c-d[1]

Line 24: logic_expression : rel_expression

d[0]-c-d[1]

Line 24: expression : variable ASSIGNOP logic_expression

x=d[0]-c-d[1]

Line 24: expression_statement : expression SEMICOLON

x=d[0]-c-d[1];

Line 24: statement : expression_statement

x=d[0]-c-d[1];

Line 24: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];

Line 25: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 25: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);

Line 27: variable : ID

x

Line 27: factor : CONST_INT

0

Line 27: unary_expression : factor

0

Line 27: term : unary_expression

0

Line 27: simple_expression : term

0

Line 27: rel_expression : simple_expression

0

Line 27: logic_expression : rel_expression

0

Line 27: expression : logic_expression

0

Line 27: variable : ID LTHIRD expression RTHIRD

d[0]

Line 27: factor : variable

d[0]

Line 27: unary_expression : factor

d[0]

Line 27: term : unary_expression

d[0]

Line 27: simple_expression : term

d[0]

Line 27: factor : CONST_INT

1

Line 27: unary_expression : factor

1

Line 27: term : unary_expression

1

Line 27: simple_expression : term

1

Line 27: rel_expression : simple_expression

1

Line 27: logic_expression : rel_expression

1

Line 27: expression : logic_expression

1

Line 27: variable : ID LTHIRD expression RTHIRD

d[1]

Line 27: factor : variable

d[1]

Line 27: unary_expression : factor

d[1]

Line 27: term : unary_expression

d[1]

Line 27: simple_expression : simple_expression ADDOP term

d[0]-d[1]

Line 27: rel_expression : simple_expression

d[0]-d[1]

Line 27: logic_expression : rel_expression

d[0]-d[1]

Line 27: expression : variable ASSIGNOP logic_expression

x=d[0]-d[1]

Line 27: expression_statement : expression SEMICOLON

x=d[0]-d[1];

Line 27: statement : expression_statement

x=d[0]-d[1];

Line 27: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];

Line 28: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 28: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);

Line 30: factor : CONST_INT

0

Line 30: unary_expression : factor

0

Line 30: term : unary_expression

0

Line 30: simple_expression : term

0

Line 30: rel_expression : simple_expression

0

Line 30: logic_expression : rel_expression

0

Line 30: expression : logic_expression

0

Line 30: statement : RETURN expression SEMICOLON

return 0;

Line 30: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);
return 0;

Line 31: compound_statement : LCURL statements RCURL

{
int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);
return 0;
}

ScopeTable # 1.1
0 --> < x , ID > 
7 --> < a , ID > 
8 --> < b , ID > 
9 --> < c , ID > 
10 --> < d , ID > 

ScopeTable # 1
1 --> < main , ID > 

Line 31: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);
return 0;
}

Line 31: unit : func_definition

int main(){
int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);
return 0;
}

Line 31: program : unit

int main(){
int d[4];
d[0]=20;
d[1]=40;
int a,b,c;
a=10;
b=14;
c=16;
int x;
x=d[0]-d[1];
printf(x);
x=d[0]-d[1]+c;
printf(x);
x=a+b+c;
printf(x);
x=d[0]-c-d[1];
printf(x);
x=d[0]-d[1];
printf(x);
return 0;
}

Line 31: start : program

ScopeTable # 1
1 --> < main , ID > 

Total lines: 31
Total errors: 0
