Line 1: type_specifier : INT

int

Line 3: type_specifier : INT

int

Line 3: declaration_list : ID LTHIRD CONST_INT RTHIRD

d[4]

Line 3: var_declaration : type_specifier declaration_list SEMICOLON

int d[4];

Line 3: statement : var_declaration

int d[4];

Line 3: statements : statement

int d[4];

Line 4: factor : CONST_INT

0

Line 4: unary_expression : factor

0

Line 4: term : unary_expression

0

Line 4: simple_expression : term

0

Line 4: rel_expression : simple_expression

0

Line 4: logic_expression : rel_expression

0

Line 4: expression : logic_expression

0

Line 4: variable : ID LTHIRD expression RTHIRD

d[0]

Line 4: factor : CONST_INT

20

Line 4: unary_expression : factor

20

Line 4: term : unary_expression

20

Line 4: simple_expression : term

20

Line 4: rel_expression : simple_expression

20

Line 4: logic_expression : rel_expression

20

Line 4: expression : variable ASSIGNOP logic_expression

d[0]=20

Line 4: expression_statement : expression SEMICOLON

d[0]=20;

Line 4: statement : expression_statement

d[0]=20;

Line 4: statements : statements statement

int d[4];
d[0]=20;

Line 5: factor : CONST_INT

1

Line 5: unary_expression : factor

1

Line 5: term : unary_expression

1

Line 5: simple_expression : term

1

Line 5: rel_expression : simple_expression

1

Line 5: logic_expression : rel_expression

1

Line 5: expression : logic_expression

1

Line 5: variable : ID LTHIRD expression RTHIRD

d[1]

Line 5: factor : CONST_INT

40

Line 5: unary_expression : factor

40

Line 5: term : unary_expression

40

Line 5: simple_expression : term

40

Line 5: rel_expression : simple_expression

40

Line 5: logic_expression : rel_expression

40

Line 5: expression : variable ASSIGNOP logic_expression

d[1]=40

Line 5: expression_statement : expression SEMICOLON

d[1]=40;

Line 5: statement : expression_statement

d[1]=40;

Line 5: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;

Line 7: type_specifier : INT

int

Line 7: declaration_list : ID

x

Line 7: var_declaration : type_specifier declaration_list SEMICOLON

int x;

Line 7: statement : var_declaration

int x;

Line 7: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;

Line 8: variable : ID

x

Line 8: factor : CONST_INT

0

Line 8: unary_expression : factor

0

Line 8: term : unary_expression

0

Line 8: simple_expression : term

0

Line 8: rel_expression : simple_expression

0

Line 8: logic_expression : rel_expression

0

Line 8: expression : logic_expression

0

Line 8: variable : ID LTHIRD expression RTHIRD

d[0]

Line 8: factor : variable

d[0]

Line 8: unary_expression : factor

d[0]

Line 8: term : unary_expression

d[0]

Line 8: simple_expression : term

d[0]

Line 8: factor : CONST_INT

1

Line 8: unary_expression : factor

1

Line 8: term : unary_expression

1

Line 8: simple_expression : term

1

Line 8: rel_expression : simple_expression

1

Line 8: logic_expression : rel_expression

1

Line 8: expression : logic_expression

1

Line 8: variable : ID LTHIRD expression RTHIRD

d[1]

Line 8: factor : variable

d[1]

Line 8: unary_expression : factor

d[1]

Line 8: term : unary_expression

d[1]

Line 8: simple_expression : simple_expression ADDOP term

d[0]+d[1]

Line 8: rel_expression : simple_expression

d[0]+d[1]

Line 8: logic_expression : rel_expression

d[0]+d[1]

Line 8: expression : variable ASSIGNOP logic_expression

x=d[0]+d[1]

Line 8: expression_statement : expression SEMICOLON

x=d[0]+d[1];

Line 8: statement : expression_statement

x=d[0]+d[1];

Line 8: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];

Line 9: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 9: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);

Line 11: variable : ID

x

Line 11: factor : CONST_INT

0

Line 11: unary_expression : factor

0

Line 11: term : unary_expression

0

Line 11: simple_expression : term

0

Line 11: rel_expression : simple_expression

0

Line 11: logic_expression : rel_expression

0

Line 11: expression : logic_expression

0

Line 11: variable : ID LTHIRD expression RTHIRD

d[0]

Line 11: factor : variable

d[0]

Line 11: unary_expression : factor

d[0]

Line 11: term : unary_expression

d[0]

Line 11: simple_expression : term

d[0]

Line 11: factor : CONST_INT

1

Line 11: unary_expression : factor

1

Line 11: term : unary_expression

1

Line 11: simple_expression : term

1

Line 11: rel_expression : simple_expression

1

Line 11: logic_expression : rel_expression

1

Line 11: expression : logic_expression

1

Line 11: variable : ID LTHIRD expression RTHIRD

d[1]

Line 11: factor : variable

d[1]

Line 11: unary_expression : factor

d[1]

Line 11: term : unary_expression

d[1]

Line 11: simple_expression : simple_expression ADDOP term

d[0]-d[1]

Line 11: rel_expression : simple_expression

d[0]-d[1]

Line 11: logic_expression : rel_expression

d[0]-d[1]

Line 11: expression : variable ASSIGNOP logic_expression

x=d[0]-d[1]

Line 11: expression_statement : expression SEMICOLON

x=d[0]-d[1];

Line 11: statement : expression_statement

x=d[0]-d[1];

Line 11: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];

Line 12: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 12: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);

Line 14: variable : ID

x

Line 14: factor : CONST_INT

0

Line 14: unary_expression : factor

0

Line 14: term : unary_expression

0

Line 14: simple_expression : term

0

Line 14: rel_expression : simple_expression

0

Line 14: logic_expression : rel_expression

0

Line 14: expression : logic_expression

0

Line 14: variable : ID LTHIRD expression RTHIRD

d[0]

Line 14: factor : variable

d[0]

Line 14: unary_expression : factor

d[0]

Line 14: term : unary_expression

d[0]

Line 14: factor : CONST_INT

1

Line 14: unary_expression : factor

1

Line 14: term : unary_expression

1

Line 14: simple_expression : term

1

Line 14: rel_expression : simple_expression

1

Line 14: logic_expression : rel_expression

1

Line 14: expression : logic_expression

1

Line 14: variable : ID LTHIRD expression RTHIRD

d[1]

Line 14: factor : variable

d[1]

Line 14: unary_expression : factor

d[1]

Line 14: term : term MULOP unary_expression

d[0]*d[1]

Line 14: simple_expression : term

d[0]*d[1]

Line 14: rel_expression : simple_expression

d[0]*d[1]

Line 14: logic_expression : rel_expression

d[0]*d[1]

Line 14: expression : variable ASSIGNOP logic_expression

x=d[0]*d[1]

Line 14: expression_statement : expression SEMICOLON

x=d[0]*d[1];

Line 14: statement : expression_statement

x=d[0]*d[1];

Line 14: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];

Line 15: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 15: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);

Line 17: variable : ID

x

Line 17: factor : CONST_INT

0

Line 17: unary_expression : factor

0

Line 17: term : unary_expression

0

Line 17: simple_expression : term

0

Line 17: rel_expression : simple_expression

0

Line 17: logic_expression : rel_expression

0

Line 17: expression : logic_expression

0

Line 17: variable : ID LTHIRD expression RTHIRD

d[0]

Line 17: factor : variable

d[0]

Line 17: unary_expression : factor

d[0]

Line 17: term : unary_expression

d[0]

Line 17: factor : CONST_INT

1

Line 17: unary_expression : factor

1

Line 17: term : unary_expression

1

Line 17: simple_expression : term

1

Line 17: rel_expression : simple_expression

1

Line 17: logic_expression : rel_expression

1

Line 17: expression : logic_expression

1

Line 17: variable : ID LTHIRD expression RTHIRD

d[1]

Line 17: factor : variable

d[1]

Line 17: unary_expression : factor

d[1]

Line 17: term : term MULOP unary_expression

d[0]/d[1]

Line 17: simple_expression : term

d[0]/d[1]

Line 17: rel_expression : simple_expression

d[0]/d[1]

Line 17: logic_expression : rel_expression

d[0]/d[1]

Line 17: expression : variable ASSIGNOP logic_expression

x=d[0]/d[1]

Line 17: expression_statement : expression SEMICOLON

x=d[0]/d[1];

Line 17: statement : expression_statement

x=d[0]/d[1];

Line 17: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];

Line 18: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 18: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);

Line 20: variable : ID

x

Line 20: factor : CONST_INT

0

Line 20: unary_expression : factor

0

Line 20: term : unary_expression

0

Line 20: simple_expression : term

0

Line 20: rel_expression : simple_expression

0

Line 20: logic_expression : rel_expression

0

Line 20: expression : logic_expression

0

Line 20: variable : ID LTHIRD expression RTHIRD

d[0]

Line 20: factor : variable

d[0]

Line 20: unary_expression : factor

d[0]

Line 20: term : unary_expression

d[0]

Line 20: factor : CONST_INT

1

Line 20: unary_expression : factor

1

Line 20: term : unary_expression

1

Line 20: simple_expression : term

1

Line 20: rel_expression : simple_expression

1

Line 20: logic_expression : rel_expression

1

Line 20: expression : logic_expression

1

Line 20: variable : ID LTHIRD expression RTHIRD

d[1]

Line 20: factor : variable

d[1]

Line 20: unary_expression : factor

d[1]

Line 20: term : term MULOP unary_expression

d[0]%d[1]

Line 20: simple_expression : term

d[0]%d[1]

Line 20: rel_expression : simple_expression

d[0]%d[1]

Line 20: logic_expression : rel_expression

d[0]%d[1]

Line 20: expression : variable ASSIGNOP logic_expression

x=d[0]%d[1]

Line 20: expression_statement : expression SEMICOLON

x=d[0]%d[1];

Line 20: statement : expression_statement

x=d[0]%d[1];

Line 20: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];

Line 21: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 21: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);

Line 23: factor : CONST_INT

0

Line 23: unary_expression : factor

0

Line 23: term : unary_expression

0

Line 23: simple_expression : term

0

Line 23: rel_expression : simple_expression

0

Line 23: logic_expression : rel_expression

0

Line 23: expression : logic_expression

0

Line 23: statement : RETURN expression SEMICOLON

return 0;

Line 23: statements : statements statement

int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);
return 0;

Line 24: compound_statement : LCURL statements RCURL

{
int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);
return 0;
}

ScopeTable # 1.1
0 --> < x , ID > 
10 --> < d , ID > 

ScopeTable # 1
1 --> < main , ID > 

Line 24: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);
return 0;
}

Line 24: unit : func_definition

int main(){
int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);
return 0;
}

Line 24: program : unit

int main(){
int d[4];
d[0]=20;
d[1]=40;
int x;
x=d[0]+d[1];
printf(x);
x=d[0]-d[1];
printf(x);
x=d[0]*d[1];
printf(x);
x=d[0]/d[1];
printf(x);
x=d[0]%d[1];
printf(x);
return 0;
}

Line 24: start : program

ScopeTable # 1
1 --> < main , ID > 

Total lines: 24
Total errors: 0
