Line 1: type_specifier : INT

int

Line 2: type_specifier : INT

int

Line 2: declaration_list : ID

x

Line 2: declaration_list : declaration_list COMMA ID

x,y

Line 2: declaration_list : declaration_list COMMA ID

x,y,z

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;

Line 2: statement : var_declaration

int x,y,z;

Line 2: statements : statement

int x,y,z;

Line 3: variable : ID

x

Line 3: factor : CONST_INT

4

Line 3: unary_expression : factor

4

Line 3: term : unary_expression

4

Line 3: simple_expression : term

4

Line 3: rel_expression : simple_expression

4

Line 3: logic_expression : rel_expression

4

Line 3: expression : variable ASSIGNOP logic_expression

x=4

Line 3: expression_statement : expression SEMICOLON

x=4;

Line 3: statement : expression_statement

x=4;

Line 3: statements : statements statement

int x,y,z;
x=4;

Line 4: variable : ID

x

Line 4: factor : variable

x

Line 4: unary_expression : factor

x

Line 4: term : unary_expression

x

Line 4: simple_expression : term

x

Line 4: factor : CONST_INT

0

Line 4: unary_expression : factor

0

Line 4: term : unary_expression

0

Line 4: simple_expression : term

0

Line 4: rel_expression : simple_expression RELOP simple_expression

x>0

Line 4: logic_expression : rel_expression

x>0

Line 4: expression : logic_expression

x>0

Line 6: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 6: statements : statement

printf(x);

Line 7: variable : ID

x

Line 7: factor : variable DECOP

x--

Line 7: unary_expression : factor

x--

Line 7: term : unary_expression

x--

Line 7: simple_expression : term

x--

Line 7: rel_expression : simple_expression

x--

Line 7: logic_expression : rel_expression

x--

Line 7: expression : logic_expression

x--

Line 7: expression_statement : expression SEMICOLON

x--;

Line 7: statement : expression_statement

x--;

Line 7: statements : statements statement

printf(x);
x--;

Line 8: compound_statement : LCURL statements RCURL

{
printf(x);
x--;
}

ScopeTable # 1.1.1

ScopeTable # 1.1
0 --> < x , ID > 
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1
1 --> < main , ID > 

Line 8: statement : compound_statement

{
printf(x);
x--;
}

Line 8: statement : WHILE LPAREN expression RPAREN statement

while(x>0){
printf(x);
x--;
}

Line 8: statements : statements statement

int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}

Line 9: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(x);

Line 9: statements : statements statement

int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}
printf(x);

Line 10: compound_statement : LCURL statements RCURL

{
int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}
printf(x);
}

ScopeTable # 1.1
0 --> < x , ID > 
1 --> < y , ID > 
2 --> < z , ID > 

ScopeTable # 1
1 --> < main , ID > 

Line 10: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}
printf(x);
}

Line 10: unit : func_definition

int main(){
int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}
printf(x);
}

Line 10: program : unit

int main(){
int x,y,z;
x=4;
while(x>0){
printf(x);
x--;
}
printf(x);
}

Line 10: start : program

ScopeTable # 1
1 --> < main , ID > 

Total lines: 10
Total errors: 0
