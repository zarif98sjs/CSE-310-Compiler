Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN error
    9                 | type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN error
   13                 | type_specifier ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN error

   15 $@1: %empty

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   17 $@2: %empty

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement

   19 $@3: %empty

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement

   21 $@4: %empty

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement

   23 parameter_list: parameter_list COMMA type_specifier ID
   24               | parameter_list error COMMA type_specifier ID
   25               | parameter_list COMMA type_specifier
   26               | parameter_list error COMMA type_specifier
   27               | type_specifier ID
   28               | type_specifier

   29 compound_statement: LCURL dummy_scope_function statements RCURL
   30                   | LCURL dummy_scope_function RCURL
   31                   | LCURL dummy_scope_function statements error RCURL
   32                   | LCURL dummy_scope_function error statements RCURL
   33                   | LCURL dummy_scope_function error RCURL

   34 dummy_scope_function: %empty

   35 var_declaration: type_specifier declaration_list SEMICOLON
   36                | type_specifier declaration_list error SEMICOLON

   37 type_specifier: INT
   38               | FLOAT
   39               | VOID

   40 declaration_list: declaration_list COMMA ID
   41                 | declaration_list error COMMA ID
   42                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   43                 | declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD
   44                 | declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD
   45                 | declaration_list error COMMA ID LTHIRD CONST_FLOAT RTHIRD
   46                 | ID
   47                 | ID LTHIRD CONST_INT RTHIRD
   48                 | ID LTHIRD CONST_FLOAT RTHIRD

   49 statements: statement
   50           | statements statement
   51           | statements error statement

   52 statement: var_declaration
   53          | func_definition
   54          | func_declaration
   55          | expression_statement
   56          | compound_statement
   57          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   58          | IF LPAREN expression RPAREN statement
   59          | IF LPAREN expression RPAREN statement ELSE statement
   60          | WHILE LPAREN expression RPAREN statement
   61          | PRINTLN LPAREN ID RPAREN SEMICOLON
   62          | RETURN expression SEMICOLON
   63          | RETURN SEMICOLON

   64 expression_statement: SEMICOLON
   65                     | expression SEMICOLON

   66 variable: ID
   67         | ID LTHIRD expression RTHIRD

   68 expression: logic_expression
   69           | variable ASSIGNOP logic_expression

   70 logic_expression: rel_expression
   71                 | rel_expression LOGICOP rel_expression

   72 rel_expression: simple_expression
   73               | simple_expression RELOP simple_expression

   74 simple_expression: term
   75                  | simple_expression ADDOP term

   76 term: unary_expression
   77     | term MULOP unary_expression

   78 unary_expression: ADDOP unary_expression
   79                 | NOT unary_expression
   80                 | factor

   81 factor: variable
   82       | ID LPAREN argument_list RPAREN
   83       | LPAREN expression RPAREN
   84       | CONST_INT
   85       | CONST_FLOAT
   86       | ERROR_FLOAT
   87       | variable INCOP
   88       | variable DECOP

   89 argument_list: arguments
   90              | %empty

   91 arguments: arguments COMMA logic_expression
   92          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 8 9 10 12 13 14 18 22 24 26 31 32 33 36 41 43 45 51
IF (258) 58 59
ELSE (259) 59
LOWER_THAN_ELSE (260)
FOR (261) 57
WHILE (262) 60
DO (263)
BREAK (264)
CHAR (265)
DOUBLE (266)
RETURN (267) 62 63
SWITCH (268)
CASE (269)
DEFAULT (270)
CONTINUE (271)
PRINTLN (272) 61
INCOP (273) 87
DECOP (274) 88
ASSIGNOP (275) 69
NOT (276) 79
LPAREN (277) 7 8 9 10 11 12 13 14 16 18 20 22 57 58 59 60 61 82 83
RPAREN (278) 7 8 9 10 11 12 13 14 16 18 20 22 57 58 59 60 61 82 83
LCURL (279) 29 30 31 32 33
RCURL (280) 29 30 31 32 33
LTHIRD (281) 42 43 44 45 47 48 67
RTHIRD (282) 42 43 44 45 47 48 67
COMMA (283) 23 24 25 26 40 41 42 43 44 45 91
SEMICOLON (284) 7 9 11 13 35 36 61 62 63 64 65
ID (285) 7 8 9 10 11 12 13 14 16 18 20 22 23 24 27 40 41 42 43 44 45
    46 47 48 61 66 67 82
INT (286) 37
FLOAT (287) 38
VOID (288) 39
ADDOP (289) 75 78
MULOP (290) 77
RELOP (291) 73
LOGICOP (292) 71
CONST_INT (293) 42 43 47 84
CONST_FLOAT (294) 44 45 48 85
ERROR_FLOAT (295) 86


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
start (42)
    on left: 1, on right: 0
program (43)
    on left: 2 3, on right: 1 2
unit (44)
    on left: 4 5 6, on right: 2 3
func_declaration (45)
    on left: 7 8 9 10 11 12 13 14, on right: 5 54
func_definition (46)
    on left: 16 18 20 22, on right: 6 53
$@1 (47)
    on left: 15, on right: 16
$@2 (48)
    on left: 17, on right: 18
$@3 (49)
    on left: 19, on right: 20
$@4 (50)
    on left: 21, on right: 22
parameter_list (51)
    on left: 23 24 25 26 27 28, on right: 7 8 9 10 16 18 23 24 25 26
compound_statement (52)
    on left: 29 30 31 32 33, on right: 16 18 20 22 56
dummy_scope_function (53)
    on left: 34, on right: 29 30 31 32 33
var_declaration (54)
    on left: 35 36, on right: 4 52
type_specifier (55)
    on left: 37 38 39, on right: 7 8 9 10 11 12 13 14 16 18 20 22 23
    24 25 26 27 28 35 36
declaration_list (56)
    on left: 40 41 42 43 44 45 46 47 48, on right: 35 36 40 41 42 43
    44 45
statements (57)
    on left: 49 50 51, on right: 29 31 32 50 51
statement (58)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63, on right: 49 50 51
    57 58 59 60
expression_statement (59)
    on left: 64 65, on right: 55 57
variable (60)
    on left: 66 67, on right: 69 81 87 88
expression (61)
    on left: 68 69, on right: 57 58 59 60 62 65 67 83
logic_expression (62)
    on left: 70 71, on right: 68 69 91 92
rel_expression (63)
    on left: 72 73, on right: 70 71
simple_expression (64)
    on left: 74 75, on right: 72 73 75
term (65)
    on left: 76 77, on right: 74 75 77
unary_expression (66)
    on left: 78 79 80, on right: 76 77 78 79
factor (67)
    on left: 81 82 83 84 85 86 87 88, on right: 80
argument_list (68)
    on left: 89 90, on right: 82
arguments (69)
    on left: 91 92, on right: 89 91


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   37 type_specifier: INT .

    $default  reduce using rule 37 (type_specifier)


State 2

   38 type_specifier: FLOAT .

    $default  reduce using rule 38 (type_specifier)


State 3

   39 type_specifier: VOID .

    $default  reduce using rule 39 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN parameter_list RPAREN error
    9                 | type_specifier . ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier . ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier . ID LPAREN RPAREN error
   13                 | type_specifier . ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier . ID LPAREN error RPAREN error
   16 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier . ID LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier . ID LPAREN RPAREN $@3 compound_statement
   22                | type_specifier . ID LPAREN error RPAREN $@4 compound_statement
   35 var_declaration: type_specifier . declaration_list SEMICOLON
   36                | type_specifier . declaration_list error SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN parameter_list RPAREN error
    9                 | type_specifier ID . LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID . LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID . LPAREN RPAREN error
   13                 | type_specifier ID . LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID . LPAREN error RPAREN error
   16 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID . LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID . LPAREN RPAREN $@3 compound_statement
   22                | type_specifier ID . LPAREN error RPAREN $@4 compound_statement
   46 declaration_list: ID .
   47                 | ID . LTHIRD CONST_INT RTHIRD
   48                 | ID . LTHIRD CONST_FLOAT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 46 (declaration_list)


State 14

   35 var_declaration: type_specifier declaration_list . SEMICOLON
   36                | type_specifier declaration_list . error SEMICOLON
   40 declaration_list: declaration_list . COMMA ID
   41                 | declaration_list . error COMMA ID
   42                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD
   43                 | declaration_list . error COMMA ID LTHIRD CONST_INT RTHIRD
   44                 | declaration_list . COMMA ID LTHIRD CONST_FLOAT RTHIRD
   45                 | declaration_list . error COMMA ID LTHIRD CONST_FLOAT RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . parameter_list RPAREN error
    9                 | type_specifier ID LPAREN . parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN . parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN . RPAREN error
   13                 | type_specifier ID LPAREN . error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN . error RPAREN error
   16 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN . parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID LPAREN . RPAREN $@3 compound_statement
   22                | type_specifier ID LPAREN . error RPAREN $@4 compound_statement

    error   shift, and go to state 20
    RPAREN  shift, and go to state 21
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3

    parameter_list  go to state 22
    type_specifier  go to state 23


State 16

   47 declaration_list: ID LTHIRD . CONST_INT RTHIRD
   48                 | ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25


State 17

   36 var_declaration: type_specifier declaration_list error . SEMICOLON
   41 declaration_list: declaration_list error . COMMA ID
   43                 | declaration_list error . COMMA ID LTHIRD CONST_INT RTHIRD
   45                 | declaration_list error . COMMA ID LTHIRD CONST_FLOAT RTHIRD

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 27


State 18

   40 declaration_list: declaration_list COMMA . ID
   42                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD
   44                 | declaration_list COMMA . ID LTHIRD CONST_FLOAT RTHIRD

    ID  shift, and go to state 28


State 19

   35 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 35 (var_declaration)


State 20

   13 func_declaration: type_specifier ID LPAREN error . RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error . RPAREN error
   22 func_definition: type_specifier ID LPAREN error . RPAREN $@4 compound_statement

    RPAREN  shift, and go to state 29


State 21

   11 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN . error
   20 func_definition: type_specifier ID LPAREN RPAREN . $@3 compound_statement

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    LCURL  reduce using rule 19 ($@3)

    $@3  go to state 32


State 22

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list . RPAREN error
    9                 | type_specifier ID LPAREN parameter_list . error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list . error RPAREN error
   16 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN parameter_list . error RPAREN $@2 compound_statement
   23 parameter_list: parameter_list . COMMA type_specifier ID
   24               | parameter_list . error COMMA type_specifier ID
   25               | parameter_list . COMMA type_specifier
   26               | parameter_list . error COMMA type_specifier

    error   shift, and go to state 33
    RPAREN  shift, and go to state 34
    COMMA   shift, and go to state 35


State 23

   27 parameter_list: type_specifier . ID
   28               | type_specifier .

    ID  shift, and go to state 36

    $default  reduce using rule 28 (parameter_list)


State 24

   47 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 37


State 25

   48 declaration_list: ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 38


State 26

   41 declaration_list: declaration_list error COMMA . ID
   43                 | declaration_list error COMMA . ID LTHIRD CONST_INT RTHIRD
   45                 | declaration_list error COMMA . ID LTHIRD CONST_FLOAT RTHIRD

    ID  shift, and go to state 39


State 27

   36 var_declaration: type_specifier declaration_list error SEMICOLON .

    $default  reduce using rule 36 (var_declaration)


State 28

   40 declaration_list: declaration_list COMMA ID .
   42                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD
   44                 | declaration_list COMMA ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 40

    $default  reduce using rule 40 (declaration_list)


State 29

   13 func_declaration: type_specifier ID LPAREN error RPAREN . SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN . error
   22 func_definition: type_specifier ID LPAREN error RPAREN . $@4 compound_statement

    error      shift, and go to state 41
    SEMICOLON  shift, and go to state 42

    LCURL  reduce using rule 21 ($@4)

    $@4  go to state 43


State 30

   12 func_declaration: type_specifier ID LPAREN RPAREN error .

    $default  reduce using rule 12 (func_declaration)


State 31

   11 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 11 (func_declaration)


State 32

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 44

    compound_statement  go to state 45


State 33

    9 func_declaration: type_specifier ID LPAREN parameter_list error . RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error . RPAREN error
   18 func_definition: type_specifier ID LPAREN parameter_list error . RPAREN $@2 compound_statement
   24 parameter_list: parameter_list error . COMMA type_specifier ID
   26               | parameter_list error . COMMA type_specifier

    RPAREN  shift, and go to state 46
    COMMA   shift, and go to state 47


State 34

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN . error
   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    error      shift, and go to state 48
    SEMICOLON  shift, and go to state 49

    LCURL  reduce using rule 15 ($@1)

    $@1  go to state 50


State 35

   23 parameter_list: parameter_list COMMA . type_specifier ID
   25               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 51


State 36

   27 parameter_list: type_specifier ID .

    $default  reduce using rule 27 (parameter_list)


State 37

   47 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 47 (declaration_list)


State 38

   48 declaration_list: ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 48 (declaration_list)


State 39

   41 declaration_list: declaration_list error COMMA ID .
   43                 | declaration_list error COMMA ID . LTHIRD CONST_INT RTHIRD
   45                 | declaration_list error COMMA ID . LTHIRD CONST_FLOAT RTHIRD

    LTHIRD  shift, and go to state 52

    $default  reduce using rule 41 (declaration_list)


State 40

   42 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD
   44                 | declaration_list COMMA ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 53
    CONST_FLOAT  shift, and go to state 54


State 41

   14 func_declaration: type_specifier ID LPAREN error RPAREN error .

    $default  reduce using rule 14 (func_declaration)


State 42

   13 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON .

    $default  reduce using rule 13 (func_declaration)


State 43

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 . compound_statement

    LCURL  shift, and go to state 44

    compound_statement  go to state 55


State 44

   29 compound_statement: LCURL . dummy_scope_function statements RCURL
   30                   | LCURL . dummy_scope_function RCURL
   31                   | LCURL . dummy_scope_function statements error RCURL
   32                   | LCURL . dummy_scope_function error statements RCURL
   33                   | LCURL . dummy_scope_function error RCURL

    $default  reduce using rule 34 (dummy_scope_function)

    dummy_scope_function  go to state 56


State 45

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement .

    $default  reduce using rule 20 (func_definition)


State 46

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN . SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN . error
   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN . $@2 compound_statement

    error      shift, and go to state 57
    SEMICOLON  shift, and go to state 58

    LCURL  reduce using rule 17 ($@2)

    $@2  go to state 59


State 47

   24 parameter_list: parameter_list error COMMA . type_specifier ID
   26               | parameter_list error COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 60


State 48

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error .

    $default  reduce using rule 8 (func_declaration)


State 49

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 50

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 44

    compound_statement  go to state 61


State 51

   23 parameter_list: parameter_list COMMA type_specifier . ID
   25               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 62

    $default  reduce using rule 25 (parameter_list)


State 52

   43 declaration_list: declaration_list error COMMA ID LTHIRD . CONST_INT RTHIRD
   45                 | declaration_list error COMMA ID LTHIRD . CONST_FLOAT RTHIRD

    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64


State 53

   42 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 65


State 54

   44 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 66


State 55

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement .

    $default  reduce using rule 22 (func_definition)


State 56

   29 compound_statement: LCURL dummy_scope_function . statements RCURL
   30                   | LCURL dummy_scope_function . RCURL
   31                   | LCURL dummy_scope_function . statements error RCURL
   32                   | LCURL dummy_scope_function . error statements RCURL
   33                   | LCURL dummy_scope_function . error RCURL

    error        shift, and go to state 67
    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    RCURL        shift, and go to state 75
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statements            go to state 86
    statement             go to state 87
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 57

   10 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN error .

    $default  reduce using rule 10 (func_declaration)


State 58

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON .

    $default  reduce using rule 9 (func_declaration)


State 59

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 44

    compound_statement  go to state 97


State 60

   24 parameter_list: parameter_list error COMMA type_specifier . ID
   26               | parameter_list error COMMA type_specifier .

    ID  shift, and go to state 98

    $default  reduce using rule 26 (parameter_list)


State 61

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 16 (func_definition)


State 62

   23 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 23 (parameter_list)


State 63

   43 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 99


State 64

   45 declaration_list: declaration_list error COMMA ID LTHIRD CONST_FLOAT . RTHIRD

    RTHIRD  shift, and go to state 100


State 65

   42 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 42 (declaration_list)


State 66

   44 declaration_list: declaration_list COMMA ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 44 (declaration_list)


State 67

   32 compound_statement: LCURL dummy_scope_function error . statements RCURL
   33                   | LCURL dummy_scope_function error . RCURL

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    RCURL        shift, and go to state 101
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statements            go to state 102
    statement             go to state 87
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 68

   58 statement: IF . LPAREN expression RPAREN statement
   59          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 103


State 69

   57 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 104


State 70

   60 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 105


State 71

   62 statement: RETURN . expression SEMICOLON
   63          | RETURN . SEMICOLON

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    SEMICOLON    shift, and go to state 106
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 107
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 72

   61 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 108


State 73

   79 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable          go to state 109
    unary_expression  go to state 110
    factor            go to state 96


State 74

   83 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 111
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 75

   30 compound_statement: LCURL dummy_scope_function RCURL .

    $default  reduce using rule 30 (compound_statement)


State 76

   64 expression_statement: SEMICOLON .

    $default  reduce using rule 64 (expression_statement)


State 77

   66 variable: ID .
   67         | ID . LTHIRD expression RTHIRD
   82 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 112
    LTHIRD  shift, and go to state 113

    $default  reduce using rule 66 (variable)


State 78

   78 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable          go to state 109
    unary_expression  go to state 114
    factor            go to state 96


State 79

   84 factor: CONST_INT .

    $default  reduce using rule 84 (factor)


State 80

   85 factor: CONST_FLOAT .

    $default  reduce using rule 85 (factor)


State 81

   86 factor: ERROR_FLOAT .

    $default  reduce using rule 86 (factor)


State 82

   54 statement: func_declaration .

    $default  reduce using rule 54 (statement)


State 83

   53 statement: func_definition .

    $default  reduce using rule 53 (statement)


State 84

   56 statement: compound_statement .

    $default  reduce using rule 56 (statement)


State 85

   52 statement: var_declaration .

    $default  reduce using rule 52 (statement)


State 86

   29 compound_statement: LCURL dummy_scope_function statements . RCURL
   31                   | LCURL dummy_scope_function statements . error RCURL
   50 statements: statements . statement
   51           | statements . error statement

    error        shift, and go to state 115
    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    RCURL        shift, and go to state 116
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 117
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 87

   49 statements: statement .

    $default  reduce using rule 49 (statements)


State 88

   55 statement: expression_statement .

    $default  reduce using rule 55 (statement)


State 89

   69 expression: variable . ASSIGNOP logic_expression
   81 factor: variable .
   87       | variable . INCOP
   88       | variable . DECOP

    INCOP     shift, and go to state 118
    DECOP     shift, and go to state 119
    ASSIGNOP  shift, and go to state 120

    $default  reduce using rule 81 (factor)


State 90

   65 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 91

   68 expression: logic_expression .

    $default  reduce using rule 68 (expression)


State 92

   70 logic_expression: rel_expression .
   71                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 122

    $default  reduce using rule 70 (logic_expression)


State 93

   72 rel_expression: simple_expression .
   73               | simple_expression . RELOP simple_expression
   75 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 123
    RELOP  shift, and go to state 124

    $default  reduce using rule 72 (rel_expression)


State 94

   74 simple_expression: term .
   77 term: term . MULOP unary_expression

    MULOP  shift, and go to state 125

    $default  reduce using rule 74 (simple_expression)


State 95

   76 term: unary_expression .

    $default  reduce using rule 76 (term)


State 96

   80 unary_expression: factor .

    $default  reduce using rule 80 (unary_expression)


State 97

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement .

    $default  reduce using rule 18 (func_definition)


State 98

   24 parameter_list: parameter_list error COMMA type_specifier ID .

    $default  reduce using rule 24 (parameter_list)


State 99

   43 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 43 (declaration_list)


State 100

   45 declaration_list: declaration_list error COMMA ID LTHIRD CONST_FLOAT RTHIRD .

    $default  reduce using rule 45 (declaration_list)


State 101

   33 compound_statement: LCURL dummy_scope_function error RCURL .

    $default  reduce using rule 33 (compound_statement)


State 102

   32 compound_statement: LCURL dummy_scope_function error statements . RCURL
   50 statements: statements . statement
   51           | statements . error statement

    error        shift, and go to state 126
    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    RCURL        shift, and go to state 127
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 117
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 103

   58 statement: IF LPAREN . expression RPAREN statement
   59          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 128
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 104

   57 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    expression_statement  go to state 129
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 105

   60 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 130
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 106

   63 statement: RETURN SEMICOLON .

    $default  reduce using rule 63 (statement)


State 107

   62 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 108

   61 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 132


State 109

   81 factor: variable .
   87       | variable . INCOP
   88       | variable . DECOP

    INCOP  shift, and go to state 118
    DECOP  shift, and go to state 119

    $default  reduce using rule 81 (factor)


State 110

   79 unary_expression: NOT unary_expression .

    $default  reduce using rule 79 (unary_expression)


State 111

   83 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 133


State 112

   82 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    $default  reduce using rule 90 (argument_list)

    variable           go to state 109
    logic_expression   go to state 134
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96
    argument_list      go to state 135
    arguments          go to state 136


State 113

   67 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 137
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 114

   78 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 78 (unary_expression)


State 115

   31 compound_statement: LCURL dummy_scope_function statements error . RCURL
   51 statements: statements error . statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    RCURL        shift, and go to state 138
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 139
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 116

   29 compound_statement: LCURL dummy_scope_function statements RCURL .

    $default  reduce using rule 29 (compound_statement)


State 117

   50 statements: statements statement .

    $default  reduce using rule 50 (statements)


State 118

   87 factor: variable INCOP .

    $default  reduce using rule 87 (factor)


State 119

   88 factor: variable DECOP .

    $default  reduce using rule 88 (factor)


State 120

   69 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 109
    logic_expression   go to state 140
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 121

   65 expression_statement: expression SEMICOLON .

    $default  reduce using rule 65 (expression_statement)


State 122

   71 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 109
    rel_expression     go to state 141
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 123

   75 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable          go to state 109
    term              go to state 142
    unary_expression  go to state 95
    factor            go to state 96


State 124

   73 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 109
    simple_expression  go to state 143
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 125

   77 term: term MULOP . unary_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable          go to state 109
    unary_expression  go to state 144
    factor            go to state 96


State 126

   51 statements: statements error . statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 139
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 127

   32 compound_statement: LCURL dummy_scope_function error statements RCURL .

    $default  reduce using rule 32 (compound_statement)


State 128

   58 statement: IF LPAREN expression . RPAREN statement
   59          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 145


State 129

   57 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    expression_statement  go to state 146
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 130

   60 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 147


State 131

   62 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 62 (statement)


State 132

   61 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 148


State 133

   83 factor: LPAREN expression RPAREN .

    $default  reduce using rule 83 (factor)


State 134

   92 arguments: logic_expression .

    $default  reduce using rule 92 (arguments)


State 135

   82 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 149


State 136

   89 argument_list: arguments .
   91 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 150

    $default  reduce using rule 89 (argument_list)


State 137

   67 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 151


State 138

   31 compound_statement: LCURL dummy_scope_function statements error RCURL .

    $default  reduce using rule 31 (compound_statement)


State 139

   51 statements: statements error statement .

    $default  reduce using rule 51 (statements)


State 140

   69 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 69 (expression)


State 141

   71 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 71 (logic_expression)


State 142

   75 simple_expression: simple_expression ADDOP term .
   77 term: term . MULOP unary_expression

    MULOP  shift, and go to state 125

    $default  reduce using rule 75 (simple_expression)


State 143

   73 rel_expression: simple_expression RELOP simple_expression .
   75 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 123

    $default  reduce using rule 73 (rel_expression)


State 144

   77 term: term MULOP unary_expression .

    $default  reduce using rule 77 (term)


State 145

   58 statement: IF LPAREN expression RPAREN . statement
   59          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 152
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 146

   57 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 89
    expression         go to state 153
    logic_expression   go to state 91
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 147

   60 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 154
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 148

   61 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 155


State 149

   82 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 82 (factor)


State 150

   91 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    ID           shift, and go to state 77
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    variable           go to state 109
    logic_expression   go to state 156
    rel_expression     go to state 92
    simple_expression  go to state 93
    term               go to state 94
    unary_expression   go to state 95
    factor             go to state 96


State 151

   67 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 67 (variable)


State 152

   58 statement: IF LPAREN expression RPAREN statement .
   59          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 157

    $default  reduce using rule 58 (statement)


State 153

   57 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 158


State 154

   60 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 60 (statement)


State 155

   61 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 61 (statement)


State 156

   91 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 91 (arguments)


State 157

   59 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 159
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 158

   57 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    RETURN       shift, and go to state 71
    PRINTLN      shift, and go to state 72
    NOT          shift, and go to state 73
    LPAREN       shift, and go to state 74
    LCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 76
    ID           shift, and go to state 77
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 78
    CONST_INT    shift, and go to state 79
    CONST_FLOAT  shift, and go to state 80
    ERROR_FLOAT  shift, and go to state 81

    func_declaration      go to state 82
    func_definition       go to state 83
    compound_statement    go to state 84
    var_declaration       go to state 85
    type_specifier        go to state 10
    statement             go to state 160
    expression_statement  go to state 88
    variable              go to state 89
    expression            go to state 90
    logic_expression      go to state 91
    rel_expression        go to state 92
    simple_expression     go to state 93
    term                  go to state 94
    unary_expression      go to state 95
    factor                go to state 96


State 159

   59 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 59 (statement)


State 160

   57 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 57 (statement)
