Line 2: type_specifier : INT
Line 2: parameters : 
Line 3: type_specifier : INT
Line 3: declaration_list : ID
a
Line 3: declaration_list : declaration_list COMMA ID
b
Line 3: var_declaration : type_specifier declaration_list SEMICOLON
Line 3: statement : var_declaration
Line 3: statements : statement
Line 4: type_specifier : INT
Line 4: declaration_list : ID LTHIRD CONST_INT RTHIRD
ara
10
Line 4: var_declaration : type_specifier declaration_list SEMICOLON
Line 4: statement : var_declaration
Line 4: statements : statements statement
Line 5: factor : CONST_INT
2
Line 5: unary_expression : factor
Line 5: term : unary_expression
Line 5: simple_expression : term
Line 5: rel_expression : simple_expression
Line 5: logic_expression : rel_expression
Line 5: expression : logic expression
Line 5: variable : ID LTHIRD expression RTHIRD
ara
Line 5: factor : CONST_INT
23
Line 5: unary_expression : factor
Line 5: term : unary_expression
Line 5: simple_expression : term
Line 5: rel_expression : simple_expression
Line 5: logic_expression : rel_expression
Line 5: expression : variable ASSIGNOP logic_expression


ScopeTable # 2
 7 --> < a , ID , -1>
 8 --> < b , ID , -1>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 5: expression_statement : expression SEMICOLON
Line 5: statement : expression_statement
Line 5: statements : statements statement
Line 6: variable : ID
a
Line 6: factor : CONST_INT
1
Line 6: unary_expression : factor
Line 6: term : unary_expression
Line 6: simple_expression : term
Line 6: rel_expression : simple_expression
Line 6: logic_expression : rel_expression
Line 6: expression : variable ASSIGNOP logic_expression


ScopeTable # 2
 7 --> < a , ID , 1>
 8 --> < b , ID , -1>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 6: expression_statement : expression SEMICOLON
Line 6: statement : expression_statement
Line 6: statements : statements statement
Line 7: variable : ID
b
Line 7: factor : CONST_INT
2
Line 7: unary_expression : factor
Line 7: term : unary_expression
Line 7: simple_expression : term
Line 7: rel_expression : simple_expression
Line 7: logic_expression : rel_expression
Line 7: expression : variable ASSIGNOP logic_expression


ScopeTable # 2
 7 --> < a , ID , 1>
 8 --> < b , ID , 2>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 7: expression_statement : expression SEMICOLON
Line 7: statement : expression_statement
Line 7: statements : statements statement
Line 8: variable : ID
a
Line 8: factor : variable
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : term
Line 8: variable : ID
b
Line 8: factor : variable
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : term
Line 8: rel_expression : simple_expression RELOP simple_expression
Line 8: logic_expression : rel_expression
Line 8: expression : logic expression
Line 9: variable : ID
a
Line 9: factor : variable INCOP
Line 9: unary_expression : factor
Line 9: term : unary_expression
Line 9: simple_expression : term
Line 9: rel_expression : simple_expression
Line 9: logic_expression : rel_expression
Line 9: expression : logic expression
Line 9: expression_statement : expression SEMICOLON
Line 9: statement : expression_statement
Line 9: statements : statement
Line 10: compound_statement : LCURL statements RCURL


ScopeTable # 3



ScopeTable # 2
 7 --> < a , ID , 2>
 8 --> < b , ID , 2>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 10: statement : compound_statement
Line 12: variable : ID
a
Line 12: factor : variable DECOP
Line 12: unary_expression : factor
Line 12: term : unary_expression
Line 12: simple_expression : term
Line 12: rel_expression : simple_expression
Line 12: logic_expression : rel_expression
Line 12: expression : logic expression
Line 12: expression_statement : expression SEMICOLON
Line 12: statement : expression_statement
Line 12: statements : statement
Line 13: compound_statement : LCURL statements RCURL


ScopeTable # 4



ScopeTable # 2
 7 --> < a , ID , 1>
 8 --> < b , ID , 2>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 13: statement : compound_statement
Line 13: statement : IF LPAREN expression RPAREN statement ELSE statement
Line 13: statements : statements statement
Line 14: factor : CONST_INT
0
Line 14: unary_expression : factor
Line 14: term : unary_expression
Line 14: simple_expression : term
Line 14: rel_expression : simple_expression
Line 14: logic_expression : rel_expression
Line 14: expression : logic expression
Line 14: statement : RETURN expression SEMICOLON
Line 14: statements : statements statement
Line 15: compound_statement : LCURL statements RCURL


ScopeTable # 2
 7 --> < a , ID , 1>
 8 --> < b , ID , 2>
 17 --> < ara , ID , { -1 -1 23 -1 -1 -1 -1 -1 -1 -1 } > 



ScopeTable # 1
 26 --> < main , ID>


Line 15: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
main
Line 15: unit : func_definition
Line 15: program : unit
Line 15: start : program
