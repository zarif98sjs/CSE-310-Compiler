Line 2: type_specifier : VOID
Line 2: type_specifier : INT
Line 2: parameters : type_specifier ID
x
Line 2: type_specifier : INT
Line 2: parameters : parameters COMMA type_specifier ID
y
Line 2: type_specifier : INT
Line 2: parameters : parameters COMMA type_specifier ID
z
Line 2: parameter_list : parameters
Line 4: variable : ID
z
Line 4: factor : CONST_INT
12
Line 4: unary_expression : factor
Line 4: term : unary_expression
Line 4: simple_expression : term
Line 4: rel_expression : simple_expression
Line 4: logic_expression : rel_expression
Line 4: expression : variable ASSIGNOP logic_expression


ScopeTable # 2
 0 --> < x , ID , -1>
 1 --> < y , ID , -1>
 2 --> < z , ID , 12>



ScopeTable # 1
 12 --> < f , ID>


Line 4: expression_statement : expression SEMICOLON
Line 4: statement : expression_statement
Line 4: statements : statement
Line 5: compound_statement : LCURL statements RCURL


ScopeTable # 2
 0 --> < x , ID , -1>
 1 --> < y , ID , -1>
 2 --> < z , ID , 12>



ScopeTable # 1
 12 --> < f , ID>


Line 5: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
f
Line 5: unit : func_definition
Line 5: program : unit
Line 7: type_specifier : INT
Line 7: parameters : 
Line 8: type_specifier : INT
Line 8: declaration_list : ID
a
Line 8: declaration_list : declaration_list COMMA ID
b
Line 8: declaration_list : declaration_list COMMA ID
c
Line 8: declaration_list : declaration_list COMMA ID
i
Line 8: var_declaration : type_specifier declaration_list SEMICOLON
Line 8: statement : var_declaration
Line 8: statements : statement
Line 9: variable : ID
b
Line 9: factor : CONST_INT
0
Line 9: unary_expression : factor
Line 9: term : unary_expression
Line 9: simple_expression : term
Line 9: rel_expression : simple_expression
Line 9: logic_expression : rel_expression
Line 9: expression : variable ASSIGNOP logic_expression


ScopeTable # 3
 7 --> < a , ID , -1>
 8 --> < b , ID , 0>
 9 --> < c , ID , -1>
 15 --> < i , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 26 --> < main , ID>


Line 9: expression_statement : expression SEMICOLON
Line 9: statement : expression_statement
Line 9: statements : statements statement
Line 10: variable : ID
c
Line 10: factor : CONST_INT
1
Line 10: unary_expression : factor
Line 10: term : unary_expression
Line 10: simple_expression : term
Line 10: rel_expression : simple_expression
Line 10: logic_expression : rel_expression
Line 10: expression : variable ASSIGNOP logic_expression


ScopeTable # 3
 7 --> < a , ID , -1>
 8 --> < b , ID , 0>
 9 --> < c , ID , 1>
 15 --> < i , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 26 --> < main , ID>


Line 10: expression_statement : expression SEMICOLON
Line 10: statement : expression_statement
Line 10: statements : statements statement
Line 11: compound_statement : LCURL statements RCURL


ScopeTable # 3
 7 --> < a , ID , -1>
 8 --> < b , ID , 0>
 9 --> < c , ID , 1>
 15 --> < i , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 26 --> < main , ID>


Line 11: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
main
Line 11: unit : func_definition
Line 11: program : program unit
Line 11: start : program
