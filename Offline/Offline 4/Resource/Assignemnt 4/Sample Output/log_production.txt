Line 1: type_specifier : INT
Line 1: type_specifier : INT
Line 1: parameters : type_specifier ID
a
Line 1: parameter_list : parameters
Line 2: factor : CONST_INT
2
Line 2: unary_expression : factor
Line 2: term : unary_expression
Line 2: variable : ID
a
Line 2: factor : variable
Line 2: unary_expression : factor
Line 2: term : term MULOP unary_expression
Line 2: simple_expression : term
Line 2: rel_expression : simple_expression
Line 2: logic_expression : rel_expression
Line 2: expression : logic expression
Line 2: statement : RETURN expression SEMICOLON
Line 2: statements : statement
Line 3: variable : ID
a
Line 3: factor : CONST_INT
9
Line 3: unary_expression : factor
Line 3: term : unary_expression
Line 3: simple_expression : term
Line 3: rel_expression : simple_expression
Line 3: logic_expression : rel_expression
Line 3: expression : variable ASSIGNOP logic_expression


ScopeTable # 2
 7 --> < a , ID , 9>



ScopeTable # 1
 12 --> < f , ID>


Line 3: expression_statement : expression SEMICOLON
Line 3: statement : expression_statement
Line 3: statements : statements statement
Line 4: compound_statement : LCURL statements RCURL


ScopeTable # 2
 7 --> < a , ID , 9>



ScopeTable # 1
 12 --> < f , ID>


Line 4: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
f
Line 4: unit : func_definition
Line 4: program : unit
Line 6: type_specifier : INT
Line 6: type_specifier : INT
Line 6: parameters : type_specifier ID
a
Line 6: type_specifier : INT
Line 6: parameters : parameters COMMA type_specifier ID
b
Line 6: parameter_list : parameters
Line 7: type_specifier : INT
Line 7: declaration_list : ID
x
Line 7: var_declaration : type_specifier declaration_list SEMICOLON
Line 7: statement : var_declaration
Line 7: statements : statement
Line 8: variable : ID
x
Line 8: variable : ID
a
Line 8: factor : variable
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : term
Line 8: rel_expression : simple_expression
Line 8: logic_expression : rel_expression
Line 8: arguments : logic_expression
Line 8: argument_list : arguments
Line 8: factor : ID LPAREN argument_list RPAREN
f
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : term
Line 8: variable : ID
a
Line 8: factor : variable
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : simple_expression ADDOP term
Line 8: variable : ID
b
Line 8: factor : variable
Line 8: unary_expression : factor
Line 8: term : unary_expression
Line 8: simple_expression : simple_expression ADDOP term
Line 8: rel_expression : simple_expression
Line 8: logic_expression : rel_expression
Line 8: expression : variable ASSIGNOP logic_expression


ScopeTable # 3
 0 --> < x , ID , -2>
 7 --> < a , ID , -1>
 8 --> < b , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>


Line 8: expression_statement : expression SEMICOLON
Line 8: statement : expression_statement
Line 8: statements : statements statement
Line 9: variable : ID
x
Line 9: factor : variable
Line 9: unary_expression : factor
Line 9: term : unary_expression
Line 9: simple_expression : term
Line 9: rel_expression : simple_expression
Line 9: logic_expression : rel_expression
Line 9: expression : logic expression
Line 9: statement : RETURN expression SEMICOLON
Line 9: statements : statements statement
Line 10: compound_statement : LCURL statements RCURL


ScopeTable # 3
 0 --> < x , ID , -2>
 7 --> < a , ID , -1>
 8 --> < b , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>


Line 10: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
g
Line 10: unit : func_definition
Line 10: program : program unit
Line 12: type_specifier : INT
Line 12: parameters : 
Line 13: type_specifier : INT
Line 13: declaration_list : ID
a
Line 13: declaration_list : declaration_list COMMA ID
b
Line 13: var_declaration : type_specifier declaration_list SEMICOLON
Line 13: statement : var_declaration
Line 13: statements : statement
Line 14: variable : ID
a
Line 14: factor : CONST_INT
1
Line 14: unary_expression : factor
Line 14: term : unary_expression
Line 14: simple_expression : term
Line 14: rel_expression : simple_expression
Line 14: logic_expression : rel_expression
Line 14: expression : variable ASSIGNOP logic_expression


ScopeTable # 4
 7 --> < a , ID , 1>
 8 --> < b , ID , -1>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>
 26 --> < main , ID>


Line 14: expression_statement : expression SEMICOLON
Line 14: statement : expression_statement
Line 14: statements : statements statement
Line 15: variable : ID
b
Line 15: factor : CONST_INT
2
Line 15: unary_expression : factor
Line 15: term : unary_expression
Line 15: simple_expression : term
Line 15: rel_expression : simple_expression
Line 15: logic_expression : rel_expression
Line 15: expression : variable ASSIGNOP logic_expression


ScopeTable # 4
 7 --> < a , ID , 1>
 8 --> < b , ID , 2>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>
 26 --> < main , ID>


Line 15: expression_statement : expression SEMICOLON
Line 15: statement : expression_statement
Line 15: statements : statements statement
Line 16: variable : ID
a
Line 16: variable : ID
a
Line 16: factor : variable
Line 16: unary_expression : factor
Line 16: term : unary_expression
Line 16: simple_expression : term
Line 16: rel_expression : simple_expression
Line 16: logic_expression : rel_expression
Line 16: arguments : logic_expression
Line 16: variable : ID
b
Line 16: factor : variable
Line 16: unary_expression : factor
Line 16: term : unary_expression
Line 16: simple_expression : term
Line 16: rel_expression : simple_expression
Line 16: logic_expression : rel_expression
Line 16: arguments : arguments COMMA logic_expression
Line 16: argument_list : arguments
Line 16: factor : ID LPAREN argument_list RPAREN
g
Line 16: unary_expression : factor
Line 16: term : unary_expression
Line 16: simple_expression : term
Line 16: rel_expression : simple_expression
Line 16: logic_expression : rel_expression
Line 16: expression : variable ASSIGNOP logic_expression


ScopeTable # 4
 7 --> < a , ID , 0>
 8 --> < b , ID , 2>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>
 26 --> < main , ID>


Line 16: expression_statement : expression SEMICOLON
Line 16: statement : expression_statement
Line 16: statements : statements statement
Line 17: statement : PRINTLN LPAREN ID RPAREN SEMICOLON
a
Line 17: statements : statements statement
Line 18: factor : CONST_INT
0
Line 18: unary_expression : factor
Line 18: term : unary_expression
Line 18: simple_expression : term
Line 18: rel_expression : simple_expression
Line 18: logic_expression : rel_expression
Line 18: expression : logic expression
Line 18: statement : RETURN expression SEMICOLON
Line 18: statements : statements statement
Line 19: compound_statement : LCURL statements RCURL


ScopeTable # 4
 7 --> < a , ID , 0>
 8 --> < b , ID , 2>



ScopeTable # 1
 12 --> < f , ID>
 13 --> < g , ID>
 26 --> < main , ID>


Line 19: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
main
Line 19: unit : func_definition
Line 19: program : program unit
Line 19: start : program
